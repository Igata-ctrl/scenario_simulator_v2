<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="custom__command__action_8hpp" kind="file" language="C++">
    <compoundname>custom_command_action.hpp</compoundname>
    <includes local="no">iterator</includes>
    <includes refid="error_8hpp" local="no">openscenario_interpreter/error.hpp</includes>
    <includes refid="fork__exec_8hpp" local="no">openscenario_interpreter/posix/fork_exec.hpp</includes>
    <includes refid="procedure_8hpp" local="no">openscenario_interpreter/procedure.hpp</includes>
    <includes refid="content_8hpp" local="no">openscenario_interpreter/reader/content.hpp</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="user__defined__action_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/user_defined_action.hpp</includedby>
    <incdepgraph>
      <node id="3933">
        <label>list</label>
      </node>
      <node id="3912">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="3920">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="3923">
        <label>system_error</label>
      </node>
      <node id="3908">
        <label>iomanip</label>
      </node>
      <node id="3925">
        <label>limits</label>
      </node>
      <node id="3906">
        <label>iterator</label>
      </node>
      <node id="3949">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3953">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="3919">
        <label>openscenario_interpreter/string/split.hpp</label>
        <link refid="split_8hpp_source"/>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
      </node>
      <node id="3909">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
      </node>
      <node id="3964">
        <label>pugixml.hpp</label>
      </node>
      <node id="3932">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="3933" relation="include">
        </childnode>
        <childnode refid="3934" relation="include">
        </childnode>
        <childnode refid="3939" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
      </node>
      <node id="3934">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="3935" relation="include">
        </childnode>
      </node>
      <node id="3913">
        <label>stdexcept</label>
      </node>
      <node id="3955">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="3953" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3956" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3956">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="3910">
        <label>string</label>
      </node>
      <node id="3952">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="3953" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3954" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3938">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="3939" relation="include">
        </childnode>
      </node>
      <node id="3929">
        <label>boost/algorithm/string/trim.hpp</label>
      </node>
      <node id="3935">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3936" relation="include">
        </childnode>
        <childnode refid="3940" relation="include">
        </childnode>
        <childnode refid="3942" relation="include">
        </childnode>
        <childnode refid="3944" relation="include">
        </childnode>
        <childnode refid="3946" relation="include">
        </childnode>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3911" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
      </node>
      <node id="3947">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="3948" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3942">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="3943" relation="include">
        </childnode>
      </node>
      <node id="3957">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3927">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="3963">
        <label>ostream</label>
      </node>
      <node id="3961">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="3907">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="3908" relation="include">
        </childnode>
        <childnode refid="3909" relation="include">
        </childnode>
        <childnode refid="3912" relation="include">
        </childnode>
        <childnode refid="3913" relation="include">
        </childnode>
      </node>
      <node id="3940">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="3941" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
      </node>
      <node id="3930">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3931" relation="include">
        </childnode>
        <childnode refid="3952" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3957" relation="include">
        </childnode>
        <childnode refid="3958" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
      </node>
      <node id="3924">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
      </node>
      <node id="3915">
        <label>sys/types.h</label>
      </node>
      <node id="3911">
        <label>typeinfo</label>
      </node>
      <node id="3943">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3954">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="3937">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3958">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="3953" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3959" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3917">
        <label>unistd.h</label>
      </node>
      <node id="3922">
        <label>vector</label>
      </node>
      <node id="3944">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3945" relation="include">
        </childnode>
      </node>
      <node id="3931">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="3908" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3932" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3914">
        <label>openscenario_interpreter/posix/fork_exec.hpp</label>
        <link refid="fork__exec_8hpp_source"/>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
      </node>
      <node id="3962">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
      </node>
      <node id="3921">
        <label>utility</label>
      </node>
      <node id="3905">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/custom_command_action.hpp</label>
        <link refid="custom__command__action_8hpp"/>
        <childnode refid="3906" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3924" relation="include">
        </childnode>
        <childnode refid="3928" relation="include">
        </childnode>
        <childnode refid="3913" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
        <childnode refid="3939" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
      </node>
      <node id="3941">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3916">
        <label>sys/wait.h</label>
      </node>
      <node id="3918">
        <label>iostream</label>
      </node>
      <node id="3959">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="3965">
        <label>unordered_map</label>
      </node>
      <node id="3945">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="3938" relation="include">
        </childnode>
      </node>
      <node id="3936">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="3937" relation="include">
        </childnode>
      </node>
      <node id="3928">
        <label>openscenario_interpreter/reader/content.hpp</label>
        <link refid="content_8hpp_source"/>
        <childnode refid="3929" relation="include">
        </childnode>
        <childnode refid="3930" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3946">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3949" relation="include">
        </childnode>
        <childnode refid="3950" relation="include">
        </childnode>
      </node>
      <node id="3939">
        <label>type_traits</label>
      </node>
      <node id="3948">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
      </node>
      <node id="3960">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="3953" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3907" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3950">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3910" relation="include">
        </childnode>
      </node>
      <node id="3926">
        <label>memory</label>
      </node>
      <node id="3951">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="3921" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3971">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="3972" relation="include">
        </childnode>
      </node>
      <node id="3968">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
      </node>
      <node id="3977">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp</label>
        <link refid="init__actions_8hpp_source"/>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="3974">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="3976">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="3969">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="3970" relation="include">
        </childnode>
      </node>
      <node id="3967">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/user_defined_action.hpp</label>
        <link refid="user__defined__action_8hpp_source"/>
        <childnode refid="3968" relation="include">
        </childnode>
      </node>
      <node id="3972">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="3973" relation="include">
        </childnode>
      </node>
      <node id="3975">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="3976" relation="include">
        </childnode>
      </node>
      <node id="3966">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/custom_command_action.hpp</label>
        <link refid="custom__command__action_8hpp"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3978">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="3974" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="3974" relation="include">
        </childnode>
      </node>
      <node id="3970">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpecialAction" prot="public">openscenario_interpreter::syntax::SpecialAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" prot="public">openscenario_interpreter::syntax::CustomCommandAction</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__CUSTOM_COMMAND_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__CUSTOM_COMMAND_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/posix/fork_exec.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/procedure.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/reader/content.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::runtime_error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::true_type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::make_pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Value&gt;</highlight></codeline>
<codeline lineno="35" refid="structopenscenario__interpreter_1_1syntax_1_1SpecialAction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpecialAction" kindref="compound">SpecialAction</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::integral_constant&lt;int,<sp/>Value&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>CustomCommandAction<sp/>----------------------------------------------------</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;CustomCommandAction&quot;&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:simpleContent&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:extension<sp/>base=&quot;xsd:string&quot;&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;type&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;/xsd:extension&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;/xsd:simpleContent&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" kindref="compound">CustomCommandAction</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>inner_scope;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>type;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>content;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" kindref="compound">CustomCommandAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>:<sp/>inner_scope(outer_scope),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>type(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>inner_scope)),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>content(readContent&lt;String&gt;(node,<sp/>inner_scope))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::true_type<sp/>accomplished{};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>walkStraightAction(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/>actors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>current_scope)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>actor<sp/>:<sp/>actors)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestWalkStraight(actor);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>actor<sp/>:<sp/>current_scope.actors)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>requestWalkStraight(actor);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_scope.actors.size();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitSuccess(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpecialAction" kindref="compound">SpecialAction&lt;EXIT_SUCCESS&gt;</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exitFailure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpecialAction" kindref="compound">SpecialAction&lt;EXIT_FAILURE&gt;</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>Error(__FILE__,<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>segv(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::add_pointer&lt;int&gt;::type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;<sp/>args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>std::cbegin(args);<sp/>iter<sp/>!=<sp/>std::cend(args);<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>args[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::distance(std::cbegin(args),<sp/>iter)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>*iter<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args.size();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string,<sp/>std::function&lt;int(const<sp/>std::vector&lt;std::string&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;)&gt;&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>builtins{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(</highlight><highlight class="stringliteral">&quot;WalkStraightAction&quot;</highlight><highlight class="normal">,<sp/>walkStraightAction),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(</highlight><highlight class="stringliteral">&quot;error&quot;</highlight><highlight class="normal">,<sp/>error),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(</highlight><highlight class="stringliteral">&quot;exitFailure&quot;</highlight><highlight class="normal">,<sp/>exitFailure),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(</highlight><highlight class="stringliteral">&quot;exitSuccess&quot;</highlight><highlight class="normal">,<sp/>exitSuccess),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(</highlight><highlight class="stringliteral">&quot;sigsegv&quot;</highlight><highlight class="normal">,<sp/>segv),<sp/><sp/></highlight><highlight class="comment">//<sp/>Deprecated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::make_pair(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>test),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>split(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>s)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::regex<sp/>pattern{R</highlight><highlight class="stringliteral">&quot;(([^\(&quot;\s,\)]+|\&quot;[^&quot;]*\&quot;),?\s*)&quot;};</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>args{};</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::sregex_iterator<sp/>iter{std::begin(s),<sp/>std::end(s),<sp/>pattern},<sp/>end;<sp/>iter<sp/>!=<sp/>end;<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>args.emplace_back((*iter)[1]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>args;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>---------------------------------------------------------------</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>&lt;CustomCommandAction<sp/>type=&quot;function(hoge,<sp/>&amp;quot;hello,<sp/>world!&amp;quot;,<sp/>3.14)&quot;/&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>result[0]<sp/>=<sp/>function(hoge,<sp/>&quot;hello,<sp/>world!&quot;,<sp/>3.14)</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>result[1]<sp/>=<sp/>function</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>result[2]<sp/>=<sp/>(hoge,<sp/>&quot;hello,<sp/>world!&quot;,<sp/>3.14)</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>result[3]<sp/>=<sp/>hoge,<sp/>&quot;hello,<sp/>world!&quot;,<sp/>3.14</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>----------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::regex<sp/>pattern{R</highlight><highlight class="stringliteral">&quot;(^(\w+)(\(((?:(?:[^\(&quot;\s,\)]+|\&quot;[^&quot;]*\&quot;),?\s*)*)\))?$)&quot;};</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>std::smatch<sp/>result{};</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::regex_match(type,<sp/>result,<sp/>pattern)<sp/>&amp;&amp;<sp/>builtins.find(result[1])<sp/>!=<sp/>std::end(builtins))<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>builtins.at(result[1])(split(result[3]),<sp/>inner_scope);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fork_exec(type,<sp/>content);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" kindref="compound">CustomCommandAction</ref><sp/>&amp;<sp/>action)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>indent<sp/>&lt;&lt;<sp/>blue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;CustomCommandAction&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>highlight(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/>action.type);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(action.content.empty())<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>blue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;/&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reset;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>blue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>reset<sp/>&lt;&lt;<sp/>action.content<sp/>&lt;&lt;<sp/>blue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;/CustomCommandAction&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>reset;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__CUSTOM_COMMAND_ACTION_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/custom_command_action.hpp"/>
  </compounddef>
</doxygen>
