<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceopenscenario__interpreter_1_1syntax" kind="namespace" language="C++">
    <compoundname>openscenario_interpreter::syntax</compoundname>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetLane" prot="public">openscenario_interpreter::syntax::AbsoluteTargetLane</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" prot="public">openscenario_interpreter::syntax::AbsoluteTargetSpeed</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AccelerationCondition" prot="public">openscenario_interpreter::syntax::AccelerationCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AcquirePositionAction" prot="public">openscenario_interpreter::syntax::AcquirePositionAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Act" prot="public">openscenario_interpreter::syntax::Act</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Action" prot="public">openscenario_interpreter::syntax::Action</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Actors" prot="public">openscenario_interpreter::syntax::Actors</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AddEntityAction" prot="public">openscenario_interpreter::syntax::AddEntityAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AdditionalAxle" prot="public">openscenario_interpreter::syntax::AdditionalAxle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AssignControllerAction" prot="public">openscenario_interpreter::syntax::AssignControllerAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AssignRouteAction" prot="public">openscenario_interpreter::syntax::AssignRouteAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Axle" prot="public">openscenario_interpreter::syntax::Axle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Axles" prot="public">openscenario_interpreter::syntax::Axles</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" prot="public">openscenario_interpreter::syntax::Boolean</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1BoundingBox" prot="public">openscenario_interpreter::syntax::BoundingBox</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ByEntityCondition" prot="public">openscenario_interpreter::syntax::ByEntityCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ByType" prot="public">openscenario_interpreter::syntax::ByType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ByValueCondition" prot="public">openscenario_interpreter::syntax::ByValueCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CatalogLocation" prot="public">openscenario_interpreter::syntax::CatalogLocation</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CatalogLocations" prot="public">openscenario_interpreter::syntax::CatalogLocations</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Center" prot="public">openscenario_interpreter::syntax::Center</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CollisionCondition" prot="public">openscenario_interpreter::syntax::CollisionCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Command" prot="public">openscenario_interpreter::syntax::Command</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Condition" prot="public">openscenario_interpreter::syntax::Condition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ConditionEdge" prot="public">openscenario_interpreter::syntax::ConditionEdge</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ConditionGroup" prot="public">openscenario_interpreter::syntax::ConditionGroup</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Controller" prot="public">openscenario_interpreter::syntax::Controller</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ControllerAction" prot="public">openscenario_interpreter::syntax::ControllerAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" prot="public">openscenario_interpreter::syntax::CustomCommandAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DeleteEntityAction" prot="public">openscenario_interpreter::syntax::DeleteEntityAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Dimensions" prot="public">openscenario_interpreter::syntax::Dimensions</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Directory" prot="public">openscenario_interpreter::syntax::Directory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DistanceCondition" prot="public">openscenario_interpreter::syntax::DistanceCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Double" prot="public">openscenario_interpreter::syntax::Double</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsDimension" prot="public">openscenario_interpreter::syntax::DynamicsDimension</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsShape" prot="public">openscenario_interpreter::syntax::DynamicsShape</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Entities" prot="public">openscenario_interpreter::syntax::Entities</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityAction" prot="public">openscenario_interpreter::syntax::EntityAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityCondition" prot="public">openscenario_interpreter::syntax::EntityCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityObject" prot="public">openscenario_interpreter::syntax::EntityObject</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityRef" prot="public">openscenario_interpreter::syntax::EntityRef</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntitySelection" prot="public">openscenario_interpreter::syntax::EntitySelection</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1equal__to" prot="public">openscenario_interpreter::syntax::equal_to</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1equal__to_3_01T_00_01typename_01std_1_1enable__if_36950e835545f4465da1ac88fcd135173" prot="public">openscenario_interpreter::syntax::equal_to&lt; T, typename std::enable_if&lt; std::is_floating_point&lt; T &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Event" prot="public">openscenario_interpreter::syntax::Event</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1File" prot="public">openscenario_interpreter::syntax::File</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1FileHeader" prot="public">openscenario_interpreter::syntax::FileHeader</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1FrontAxle" prot="public">openscenario_interpreter::syntax::FrontAxle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1GlobalAction" prot="public">openscenario_interpreter::syntax::GlobalAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1InfrastructureAction" prot="public">openscenario_interpreter::syntax::InfrastructureAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Init" prot="public">openscenario_interpreter::syntax::Init</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1InitActions" prot="public">openscenario_interpreter::syntax::InitActions</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Integer" prot="public">openscenario_interpreter::syntax::Integer</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LaneChangeAction" prot="public">openscenario_interpreter::syntax::LaneChangeAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LaneChangeTarget" prot="public">openscenario_interpreter::syntax::LaneChangeTarget</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LanePosition" prot="public">openscenario_interpreter::syntax::LanePosition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LateralAction" prot="public">openscenario_interpreter::syntax::LateralAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LongitudinalAction" prot="public">openscenario_interpreter::syntax::LongitudinalAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Maneuver" prot="public">openscenario_interpreter::syntax::Maneuver</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ManeuverGroup" prot="public">openscenario_interpreter::syntax::ManeuverGroup</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ModifyRule" prot="public">openscenario_interpreter::syntax::ModifyRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ObjectController" prot="public">openscenario_interpreter::syntax::ObjectController</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ObjectType" prot="public">openscenario_interpreter::syntax::ObjectType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1OpenScenario" prot="public">openscenario_interpreter::syntax::OpenScenario</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Orientation" prot="public">openscenario_interpreter::syntax::Orientation</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1OverrideControllerValueAction" prot="public">openscenario_interpreter::syntax::OverrideControllerValueAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterAction" prot="public">openscenario_interpreter::syntax::ParameterAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterAddValueRule" prot="public">openscenario_interpreter::syntax::ParameterAddValueRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterCondition" prot="public">openscenario_interpreter::syntax::ParameterCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclaration" prot="public">openscenario_interpreter::syntax::ParameterDeclaration</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclarations" prot="public">openscenario_interpreter::syntax::ParameterDeclarations</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterModifyAction" prot="public">openscenario_interpreter::syntax::ParameterModifyAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterMultiplyByValueRule" prot="public">openscenario_interpreter::syntax::ParameterMultiplyByValueRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterSetAction" prot="public">openscenario_interpreter::syntax::ParameterSetAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterType" prot="public">openscenario_interpreter::syntax::ParameterType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Pedestrian" prot="public">openscenario_interpreter::syntax::Pedestrian</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1PedestrianCategory" prot="public">openscenario_interpreter::syntax::PedestrianCategory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Performance" prot="public">openscenario_interpreter::syntax::Performance</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Phase" prot="public">openscenario_interpreter::syntax::Phase</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Position" prot="public">openscenario_interpreter::syntax::Position</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Priority" prot="public">openscenario_interpreter::syntax::Priority</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Private" prot="public">openscenario_interpreter::syntax::Private</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1PrivateAction" prot="public">openscenario_interpreter::syntax::PrivateAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Properties" prot="public">openscenario_interpreter::syntax::Properties</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Property" prot="public">openscenario_interpreter::syntax::Property</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ReachPositionCondition" prot="public">openscenario_interpreter::syntax::ReachPositionCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RearAxle" prot="public">openscenario_interpreter::syntax::RearAxle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ReferenceContext" prot="public">openscenario_interpreter::syntax::ReferenceContext</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceCondition" prot="public">openscenario_interpreter::syntax::RelativeDistanceCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceType" prot="public">openscenario_interpreter::syntax::RelativeDistanceType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeTargetSpeed" prot="public">openscenario_interpreter::syntax::RelativeTargetSpeed</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeWorldPosition" prot="public">openscenario_interpreter::syntax::RelativeWorldPosition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RoadNetwork" prot="public">openscenario_interpreter::syntax::RoadNetwork</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Route" prot="public">openscenario_interpreter::syntax::Route</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RouteStrategy" prot="public">openscenario_interpreter::syntax::RouteStrategy</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RoutingAction" prot="public">openscenario_interpreter::syntax::RoutingAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Rule" prot="public">openscenario_interpreter::syntax::Rule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition" prot="public">openscenario_interpreter::syntax::ScenarioDefinition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioObject" prot="public">openscenario_interpreter::syntax::ScenarioObject</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SelectedEntities" prot="public">openscenario_interpreter::syntax::SelectedEntities</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SimulationTimeCondition" prot="public">openscenario_interpreter::syntax::SimulationTimeCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedAction" prot="public">openscenario_interpreter::syntax::SpeedAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedActionTarget" prot="public">openscenario_interpreter::syntax::SpeedActionTarget</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedCondition" prot="public">openscenario_interpreter::syntax::SpeedCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedTargetValueType" prot="public">openscenario_interpreter::syntax::SpeedTargetValueType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StandStillCondition" prot="public">openscenario_interpreter::syntax::StandStillCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Story" prot="public">openscenario_interpreter::syntax::Story</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Storyboard" prot="public">openscenario_interpreter::syntax::Storyboard</innerclass>
    <innerclass refid="classopenscenario__interpreter_1_1syntax_1_1StoryboardElement" prot="public">openscenario_interpreter::syntax::StoryboardElement</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" prot="public">openscenario_interpreter::syntax::StoryboardElementState</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementStateCondition" prot="public">openscenario_interpreter::syntax::StoryboardElementStateCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementType" prot="public">openscenario_interpreter::syntax::StoryboardElementType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TeleportAction" prot="public">openscenario_interpreter::syntax::TeleportAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TimeHeadwayCondition" prot="public">openscenario_interpreter::syntax::TimeHeadwayCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalAction" prot="public">openscenario_interpreter::syntax::TrafficSignalAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalCondition" prot="public">openscenario_interpreter::syntax::TrafficSignalCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" prot="public">openscenario_interpreter::syntax::TrafficSignalController</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" prot="public">openscenario_interpreter::syntax::TrafficSignals</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" prot="public">openscenario_interpreter::syntax::TrafficSignalState</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalStateAction" prot="public">openscenario_interpreter::syntax::TrafficSignalStateAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TransitionDynamics" prot="public">openscenario_interpreter::syntax::TransitionDynamics</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Trigger" prot="public">openscenario_interpreter::syntax::Trigger</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntities" prot="public">openscenario_interpreter::syntax::TriggeringEntities</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntitiesRule" prot="public">openscenario_interpreter::syntax::TriggeringEntitiesRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" prot="public">openscenario_interpreter::syntax::UnsignedInteger</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" prot="public">openscenario_interpreter::syntax::UnsignedShort</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UserDefinedAction" prot="public">openscenario_interpreter::syntax::UserDefinedAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Vehicle" prot="public">openscenario_interpreter::syntax::Vehicle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" prot="public">openscenario_interpreter::syntax::VehicleCategory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Waypoint" prot="public">openscenario_interpreter::syntax::Waypoint</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1WorldPosition" prot="public">openscenario_interpreter::syntax::WorldPosition</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="controller_8hpp_1a84112bddd6a969ef4d48f604840244a0" prot="public" static="no">
        <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Properties" kindref="compound">Properties</ref></type>
        <definition>using openscenario_interpreter::syntax::DefaultController = typedef Properties</definition>
        <argsstring></argsstring>
        <name>DefaultController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/controller.hpp" line="47" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/controller.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="string_8hpp_1af86241b1a7785ee7d6e79b6ec85a1b49" prot="public" static="no">
        <type>std::string</type>
        <definition>using openscenario_interpreter::syntax::String = typedef std::string</definition>
        <argsstring></argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/string.hpp" line="30" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/string.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unsigned__integer_8hpp_1a21e4ea2d44394713e6adef67565475f2" prot="public" static="no">
        <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref></type>
        <definition>using openscenario_interpreter::syntax::UnsignedInt = typedef UnsignedInteger</definition>
        <argsstring></argsstring>
        <name>UnsignedInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" line="74" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boolean_8hpp_1aefcc4cc0b169b8f7c2979f0c9da7e28d" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::true_v</definition>
        <argsstring></argsstring>
        <name>true_v</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref>&gt;(true)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="71" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boolean_8hpp_1ad1272a335faa5b83cc7bacbf69a17608" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::false_v</definition>
        <argsstring></argsstring>
        <name>false_v</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref>&gt;(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="72" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a654fa5969177831b31e63c2ccd000bef" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::standby_state</definition>
        <argsstring></argsstring>
        <name>standby_state</name>
        <initializer>{make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::standbyState)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="235" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1ad31f0a15fd8fe7eba12fa562db9044f0" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::running_state</definition>
        <argsstring></argsstring>
        <name>running_state</name>
        <initializer>{make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::runningState)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="236" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1aed1262bd76dfe552373d60949d307635" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::complete_state</definition>
        <argsstring></argsstring>
        <name>complete_state</name>
        <initializer>{
  make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::completeState)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="237" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a3f671e4e9160a733364ac721e85e303c" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::start_transition</definition>
        <argsstring></argsstring>
        <name>start_transition</name>
        <initializer>{
  make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::startTransition)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="240" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a3c5a9fa7fe4fa521700a6c01d4588e1f" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::end_transition</definition>
        <argsstring></argsstring>
        <name>end_transition</name>
        <initializer>{
  make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::endTransition)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="242" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a9f27d6e73657c811b4510c5a9cb1b99f" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::stop_transition</definition>
        <argsstring></argsstring>
        <name>stop_transition</name>
        <initializer>{
  make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::stopTransition)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="244" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a89bfb572aa7dba22da1e6132d6061e99" prot="public" static="yes" mutable="no">
        <type>const auto</type>
        <definition>const auto openscenario_interpreter::syntax::skip_transition</definition>
        <argsstring></argsstring>
        <name>skip_transition</name>
        <initializer>{
  make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::skipTransition)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="246" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="axle_8hpp_1af307d3bd8d6a203b841e1bc6ebef0f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(Axle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Axle" kindref="compound">Axle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1a13a77c1286cc9a31c9864643cc05ec5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(FrontAxle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1FrontAxle" kindref="compound">FrontAxle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1a5a48dc2e249e0eab35bbcbecd9425ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(RearAxle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1RearAxle" kindref="compound">RearAxle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1ad5478158f12f86a96f8f6a35771fc5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(AdditionalAxle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1AdditionalAxle" kindref="compound">AdditionalAxle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axles_8hpp_1a4bea246da8ccfd8e987fb94456c43888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Axles &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Axles" kindref="compound">Axles</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axles.hpp" line="43" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axles.hpp" bodystart="58" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="boolean_8hpp_1a2b7cd22dd397cdd365d4f52a6c645fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Boolean &amp;boolean)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref> &amp;</type>
          <declname>boolean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="59" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="boolean_8hpp_1a2489a801b52927fb5ce9aa49ea26a2e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Boolean &amp;boolean)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref> &amp;</type>
          <declname>boolean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="boolean_8hpp_1aefdf19246a74015f09eb7d3eb3340040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto openscenario_interpreter::syntax::asBoolean</definition>
        <argsstring>(bool value)</argsstring>
        <name>asBoolean</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="74" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="bounding__box_8hpp_1ab9c919af74a2bc726c00a370f75f2f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const BoundingBox &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/bounding_box.hpp" line="56" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/bounding_box.hpp" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="center_8hpp_1a000c48686c7e4c4f6d4dd116f7eee98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Center &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Center" kindref="compound">Center</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/center.hpp" line="49" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/center.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="command_8hpp_1aa9af249064070dacb775956b6950591f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, Command &amp;command)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Command" kindref="compound">Command</ref> &amp;</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/command.hpp" line="51" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/command.hpp" bodystart="51" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="command_8hpp_1ac91ac926396cbe0ccfcf98db2e521d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Command &amp;command)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Command" kindref="compound">Command</ref> &amp;</type>
          <declname>command</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/command.hpp" line="51" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/command.hpp" bodystart="76" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="condition__edge_8hpp_1a287392ca903406bc3e6843ffe944e1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, ConditionEdge &amp;edge)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1ConditionEdge" kindref="compound">ConditionEdge</ref> &amp;</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_edge.hpp" line="108" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_edge.hpp" bodystart="108" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="condition__edge_8hpp_1a1f993c4741a035ac5d6213b0dc5ca364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ConditionEdge &amp;edge)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ConditionEdge" kindref="compound">ConditionEdge</ref> &amp;</type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_edge.hpp" line="134" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_edge.hpp" bodystart="134" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="dimensions_8hpp_1a76b2697924728a542dc3b9dfe9828f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Dimensions &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Dimensions" kindref="compound">Dimensions</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dimensions.hpp" line="37" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dimensions.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="double_8hpp_1adbe24f824f581eca700fc9551f9f7613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Double &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/double.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/double.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="double_8hpp_1a915d3736703c355b00fcd6f6f87055b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Double &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/double.hpp" line="68" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/double.hpp" bodystart="68" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__dimension_8hpp_1aaac974bfcc9f7d9eca3e56ffc75c97c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, DynamicsDimension &amp;dimension)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsDimension" kindref="compound">DynamicsDimension</ref> &amp;</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_dimension.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_dimension.hpp" bodystart="62" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__dimension_8hpp_1aa2af2e8c2808585155c97c97691b13fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const DynamicsDimension &amp;dimension)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsDimension" kindref="compound">DynamicsDimension</ref> &amp;</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_dimension.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_dimension.hpp" bodystart="99" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__shape_8hpp_1ae1743a57c07258910103e9d517c5a91f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, DynamicsShape &amp;shape)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsShape" kindref="compound">DynamicsShape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_shape.hpp" line="68" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_shape.hpp" bodystart="68" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__shape_8hpp_1a4421c72d34a3b490e779cf0ff572eb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const DynamicsShape &amp;shape)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsShape" kindref="compound">DynamicsShape</ref> &amp;</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_shape.hpp" line="68" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_shape.hpp" bodystart="106" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="integer_8hpp_1ad471344b33317686813a2ac77fc2f0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Integer &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Integer" kindref="compound">Integer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/integer.hpp" line="56" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/integer.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="integer_8hpp_1ac8f496a03fbf2380552e83c5286a18a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Integer &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Integer" kindref="compound">Integer</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/integer.hpp" line="58" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/integer.hpp" bodystart="58" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="openscenario_8hpp_1a769fe3a1e8a5a7d5d6a48bf65d31d76a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ScenarioDefinition &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition" kindref="compound">ScenarioDefinition</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="108" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="openscenario_8hpp_1a946d492c8d82057b5d8a6425ff95f866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const OpenScenario &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1OpenScenario" kindref="compound">OpenScenario</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="108" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="parameter__declaration_8hpp_1a283eec65bce4ecf4678b3150bf08d227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ParameterDeclaration &amp;declaration)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclaration" kindref="compound">ParameterDeclaration</ref> &amp;</type>
          <declname>declaration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declaration.hpp" line="107" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declaration.hpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="parameter__declarations_8hpp_1a0329e471c3f779af49801f1cf5d13275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ParameterDeclarations &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclarations" kindref="compound">ParameterDeclarations</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declarations.hpp" line="49" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declarations.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="parameter__type_8hpp_1a94d6cd717e0c278daef58f0c06555a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, ParameterType &amp;type)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterType" kindref="compound">ParameterType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_type.hpp" line="70" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_type.hpp" bodystart="70" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="parameter__type_8hpp_1af8cfa3296bda4982aba739f54d6f58b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const ParameterType &amp;type)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterType" kindref="compound">ParameterType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_type.hpp" line="70" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_type.hpp" bodystart="99" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="pedestrian_8hpp_1a80b8b3d79c2b57882cf10f21b8f29fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Pedestrian &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Pedestrian" kindref="compound">Pedestrian</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian.hpp" line="66" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian.hpp" bodystart="76" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="pedestrian__category_8hpp_1a87420ccabebc51d02fa5df97f64b9325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, PedestrianCategory &amp;category)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1PedestrianCategory" kindref="compound">PedestrianCategory</ref> &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian_category.hpp" line="57" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian_category.hpp" bodystart="57" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="pedestrian__category_8hpp_1a3d41e61f23ff55f09fed2e9fd9c9e0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const PedestrianCategory &amp;category)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1PedestrianCategory" kindref="compound">PedestrianCategory</ref> &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian_category.hpp" line="57" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian_category.hpp" bodystart="95" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="performance_8hpp_1a64b9f6c3050f2b9043f42a3904daffad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Performance &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Performance" kindref="compound">Performance</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/performance.hpp" line="53" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/performance.hpp" bodystart="52" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="position_8hpp_1a1d862eba9f0da9cad488a3dbb9ef6946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
            <defval>void</defval>
          </param>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) openscenario_interpreter::syntax::apply</definition>
        <argsstring>(F &amp;&amp;f, const Position &amp;position, Ts &amp;&amp;... xs)</argsstring>
        <name>apply</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Position" kindref="compound">Position</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/position.hpp" line="78" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/position.hpp" bodystart="78" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="priority_8hpp_1a67a0e66befe4396bc143617f89e3c8d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, Priority &amp;priority)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Priority" kindref="compound">Priority</ref> &amp;</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/priority.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/priority.hpp" bodystart="65" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="priority_8hpp_1a55b1200977a55bcd69ae889bf9ae4742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Priority &amp;priority)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Priority" kindref="compound">Priority</ref> &amp;</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/priority.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/priority.hpp" bodystart="102" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="reference__context_8hpp_1a82a5ee97a54f26b9346ad2e79c201155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, ReferenceContext &amp;context)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1ReferenceContext" kindref="compound">ReferenceContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/reference_context.hpp" line="55" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/reference_context.hpp" bodystart="55" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="reference__context_8hpp_1a3c3a47047cee6004e77a40a542426375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const ReferenceContext &amp;context)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ReferenceContext" kindref="compound">ReferenceContext</ref> &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/reference_context.hpp" line="55" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/reference_context.hpp" bodystart="91" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="relative__distance__type_8hpp_1a4c50fb21e63312da5e1cb4fa5e5e0a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, RelativeDistanceType &amp;type)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceType" kindref="compound">RelativeDistanceType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/relative_distance_type.hpp" line="56" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/relative_distance_type.hpp" bodystart="56" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="relative__distance__type_8hpp_1aa54da7e35d89275e126d6af7381d1a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const RelativeDistanceType &amp;type)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceType" kindref="compound">RelativeDistanceType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/relative_distance_type.hpp" line="56" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/relative_distance_type.hpp" bodystart="81" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="road__network_8hpp_1aceccbf3e95a1b300dffe8177cd4d063a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::ASSERT_DEFAULT_CONSTRUCTIBLE</definition>
        <argsstring>(File)</argsstring>
        <name>ASSERT_DEFAULT_CONSTRUCTIBLE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1File" kindref="compound">File</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="road__network_8hpp_1a19f85b66c2d2a4aea62fc7513993fa56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::ASSERT_DEFAULT_CONSTRUCTIBLE</definition>
        <argsstring>(TrafficSignals)</argsstring>
        <name>ASSERT_DEFAULT_CONSTRUCTIBLE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="route__strategy_8hpp_1a5f1e1009a7cb9887d2f0ceb88cf7b823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, RouteStrategy &amp;strategy)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1RouteStrategy" kindref="compound">RouteStrategy</ref> &amp;</type>
          <declname>strategy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route_strategy.hpp" line="66" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route_strategy.hpp" bodystart="66" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="route__strategy_8hpp_1a45aeeba5a04e72fadb7cc1f2d24aaf1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const RouteStrategy &amp;strategy)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1RouteStrategy" kindref="compound">RouteStrategy</ref> &amp;</type>
          <declname>strategy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route_strategy.hpp" line="66" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route_strategy.hpp" bodystart="104" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="rule_8hpp_1aea7ed77d37507900ae0675304c64c937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, Rule &amp;rule)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Rule" kindref="compound">Rule</ref> &amp;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/rule.hpp" line="80" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/rule.hpp" bodystart="80" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="rule_8hpp_1a936438f6f9fd300a73e29444acf0ce60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const Rule &amp;rule)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Rule" kindref="compound">Rule</ref> &amp;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/rule.hpp" line="80" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/rule.hpp" bodystart="105" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="scenario__object_8hpp_1a6f4f02b6d17ac731b344a29e44b694ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ScenarioObject &amp;datum)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioObject" kindref="compound">ScenarioObject</ref> &amp;</type>
          <declname>datum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_object.hpp" line="101" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_object.hpp" bodystart="101" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="speed__target__value__type_8hpp_1a9a08d36ba6c350c5b6f718f24e0cfc93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, SpeedTargetValueType &amp;type)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedTargetValueType" kindref="compound">SpeedTargetValueType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_target_value_type.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_target_value_type.hpp" bodystart="62" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="speed__target__value__type_8hpp_1a7ee897e6c73d0da8ed5d7536a13b3d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const SpeedTargetValueType &amp;type)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedTargetValueType" kindref="compound">SpeedTargetValueType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_target_value_type.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_target_value_type.hpp" bodystart="98" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__state_8hpp_1aa93cb8e6e91b34ffd6184b54159b7edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, StoryboardElementState &amp;state)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="179" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="179" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__state_8hpp_1aa43a41d20fe80c9e7662b4d0ce362e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const StoryboardElementState &amp;state)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="179" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" bodystart="209" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__type_8hpp_1ac5b767076fd5dfe29da65a2f963cca82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, StoryboardElementType &amp;type)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementType" kindref="compound">StoryboardElementType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_type.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_type.hpp" bodystart="62" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__type_8hpp_1a539780a7201fe857e7a8e88b77ba8cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const StoryboardElementType &amp;type)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementType" kindref="compound">StoryboardElementType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_type.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_type.hpp" bodystart="90" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="triggering__entities__rule_8hpp_1acb2bb60b8d4e5cf380c6743a9e7ba9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, TriggeringEntitiesRule &amp;rule)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntitiesRule" kindref="compound">TriggeringEntitiesRule</ref> &amp;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/triggering_entities_rule.hpp" line="76" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/triggering_entities_rule.hpp" bodystart="76" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="triggering__entities__rule_8hpp_1a27560d0933997519859ef2121f47c102" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const TriggeringEntitiesRule &amp;rule)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntitiesRule" kindref="compound">TriggeringEntitiesRule</ref> &amp;</type>
          <declname>rule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/triggering_entities_rule.hpp" line="76" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/triggering_entities_rule.hpp" bodystart="101" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__integer_8hpp_1a57ea480165e0969ece62282d05146e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const UnsignedInteger &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__integer_8hpp_1ab5b8f6910e1195e314df68d1ba00c2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, UnsignedInteger &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" line="69" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__short_8hpp_1acaa85c95b993506b1dd62eadca77e072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const UnsignedShort &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" kindref="compound">UnsignedShort</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_short.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_short.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__short_8hpp_1a2d0993ed3fc9192119954727d10f65d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, UnsignedShort &amp;rhs)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" kindref="compound">UnsignedShort</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_short.hpp" line="69" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_short.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="vehicle_8hpp_1a082976357f02834816a9a4b11d2484d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Vehicle &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Vehicle" kindref="compound">Vehicle</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle.hpp" line="119" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle.hpp" bodystart="119" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="vehicle__category_8hpp_1a1d9b7fd4b44ea6991f9c5e81dd643ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_istream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::basic_istream&lt; Ts... &gt; &amp;is, VehicleCategory &amp;category)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::basic_istream&lt; Ts... &gt; &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref> &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="72" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" bodystart="72" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="vehicle__category_8hpp_1a95512be663dfaaf09ba96437f71ecdde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
        <definition>std::basic_ostream&lt;Ts...&gt;&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::basic_ostream&lt; Ts... &gt; &amp;os, const VehicleCategory &amp;category)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::basic_ostream&lt; Ts... &gt; &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref> &amp;</type>
          <declname>category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="72" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" bodystart="116" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/functional/equal_to.hpp" line="26" column="1"/>
  </compounddef>
</doxygen>
