<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="speed__action_8hpp" kind="file" language="C++">
    <compoundname>speed_action.hpp</compoundname>
    <includes refid="procedure_8hpp" local="no">openscenario_interpreter/procedure.hpp</includes>
    <includes refid="rule_8hpp" local="no">openscenario_interpreter/syntax/rule.hpp</includes>
    <includes refid="speed__action__target_8hpp" local="no">openscenario_interpreter/syntax/speed_action_target.hpp</includes>
    <includes refid="transition__dynamics_8hpp" local="no">openscenario_interpreter/syntax/transition_dynamics.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includedby refid="longitudinal__action_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/longitudinal_action.hpp</includedby>
    <incdepgraph>
      <node id="10001">
        <label>iomanip</label>
      </node>
      <node id="9986">
        <label>functional</label>
      </node>
      <node id="9981">
        <label>limits</label>
      </node>
      <node id="10046">
        <label>openscenario_interpreter/syntax/dynamics_shape.hpp</label>
        <link refid="dynamics__shape_8hpp_source"/>
        <childnode refid="10002" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10044">
        <label>openscenario_interpreter/syntax/transition_dynamics.hpp</label>
        <link refid="transition__dynamics_8hpp_source"/>
        <childnode refid="10045" relation="include">
        </childnode>
        <childnode refid="10046" relation="include">
        </childnode>
      </node>
      <node id="10043">
        <label>openscenario_interpreter/syntax/speed_target_value_type.hpp</label>
        <link refid="speed__target__value__type_8hpp_source"/>
        <childnode refid="10002" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="9984">
        <label>openscenario_interpreter/string/cat.hpp</label>
        <link refid="cat_8hpp_source"/>
        <childnode refid="9985" relation="include">
        </childnode>
        <childnode refid="9988" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10041">
        <label>openscenario_interpreter/syntax/absolute_target_speed.hpp</label>
        <link refid="absolute__target__speed_8hpp_source"/>
        <childnode refid="9996" relation="include">
        </childnode>
      </node>
      <node id="10019">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10007" relation="include">
        </childnode>
      </node>
      <node id="10025">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="9992">
        <label>openscenario_interpreter/syntax/rule.hpp</label>
        <link refid="rule_8hpp_source"/>
        <childnode refid="9986" relation="include">
        </childnode>
        <childnode refid="9993" relation="include">
        </childnode>
        <childnode refid="9996" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10038">
        <label>pugixml.hpp</label>
      </node>
      <node id="10002">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="10003" relation="include">
        </childnode>
        <childnode refid="9995" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
        <childnode refid="10023" relation="include">
        </childnode>
      </node>
      <node id="10003">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="10004" relation="include">
        </childnode>
      </node>
      <node id="9994">
        <label>cmath</label>
      </node>
      <node id="9979">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_action.hpp</label>
        <link refid="speed__action_8hpp"/>
        <childnode refid="9980" relation="include">
        </childnode>
        <childnode refid="9992" relation="include">
        </childnode>
        <childnode refid="10040" relation="include">
        </childnode>
        <childnode refid="10044" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
        <childnode refid="10039" relation="include">
        </childnode>
      </node>
      <node id="9990">
        <label>stdexcept</label>
      </node>
      <node id="10028">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="9983" relation="include">
        </childnode>
        <childnode refid="10029" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10029">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="9989">
        <label>string</label>
      </node>
      <node id="10024">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="9981" relation="include">
        </childnode>
        <childnode refid="9983" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="10027" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10007">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="9995" relation="include">
        </childnode>
      </node>
      <node id="10004">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="9982" relation="include">
        </childnode>
        <childnode refid="9983" relation="include">
        </childnode>
        <childnode refid="10005" relation="include">
        </childnode>
        <childnode refid="10008" relation="include">
        </childnode>
        <childnode refid="10010" relation="include">
        </childnode>
        <childnode refid="10012" relation="include">
        </childnode>
        <childnode refid="10014" relation="include">
        </childnode>
        <childnode refid="10021" relation="include">
        </childnode>
        <childnode refid="10022" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10015">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="10016" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10026">
        <label>regex</label>
      </node>
      <node id="10010">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="10011" relation="include">
        </childnode>
      </node>
      <node id="10030">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="10002" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="9991">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="10037">
        <label>ostream</label>
      </node>
      <node id="10034">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="9983">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="9984" relation="include">
        </childnode>
        <childnode refid="9990" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10040">
        <label>openscenario_interpreter/syntax/speed_action_target.hpp</label>
        <link refid="speed__action__target_8hpp_source"/>
        <childnode refid="10041" relation="include">
        </childnode>
        <childnode refid="10042" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10008">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="10009" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="9998">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="9999" relation="include">
        </childnode>
        <childnode refid="10024" relation="include">
        </childnode>
        <childnode refid="10028" relation="include">
        </childnode>
        <childnode refid="10030" relation="include">
        </childnode>
        <childnode refid="10031" relation="include">
        </childnode>
        <childnode refid="10033" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="9996">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="9997" relation="include">
        </childnode>
        <childnode refid="9986" relation="include">
        </childnode>
        <childnode refid="9998" relation="include">
        </childnode>
        <childnode refid="10035" relation="include">
        </childnode>
        <childnode refid="10036" relation="include">
        </childnode>
        <childnode refid="10026" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
        <childnode refid="10039" relation="include">
        </childnode>
      </node>
      <node id="9980">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="9981" relation="include">
        </childnode>
        <childnode refid="9982" relation="include">
        </childnode>
        <childnode refid="9983" relation="include">
        </childnode>
        <childnode refid="9991" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="9997">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="10022">
        <label>typeinfo</label>
      </node>
      <node id="10011">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="10007" relation="include">
        </childnode>
      </node>
      <node id="10042">
        <label>openscenario_interpreter/syntax/relative_target_speed.hpp</label>
        <link refid="relative__target__speed_8hpp_source"/>
        <childnode refid="9996" relation="include">
        </childnode>
        <childnode refid="10043" relation="include">
        </childnode>
      </node>
      <node id="10027">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="10006">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="10007" relation="include">
        </childnode>
      </node>
      <node id="10031">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10032" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10017">
        <label>unistd.h</label>
      </node>
      <node id="10023">
        <label>vector</label>
      </node>
      <node id="10012">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="10013" relation="include">
        </childnode>
        <childnode refid="9988" relation="include">
        </childnode>
      </node>
      <node id="9999">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="10000" relation="include">
        </childnode>
        <childnode refid="10001" relation="include">
        </childnode>
        <childnode refid="9983" relation="include">
        </childnode>
        <childnode refid="10002" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="9993">
        <label>openscenario_interpreter/functional/equal_to.hpp</label>
        <link refid="equal__to_8hpp_source"/>
        <childnode refid="9994" relation="include">
        </childnode>
        <childnode refid="9986" relation="include">
        </childnode>
        <childnode refid="9981" relation="include">
        </childnode>
        <childnode refid="9995" relation="include">
        </childnode>
      </node>
      <node id="10000">
        <label>boost/io/ios_state.hpp</label>
      </node>
      <node id="10036">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="10037" relation="include">
        </childnode>
        <childnode refid="10038" relation="include">
        </childnode>
      </node>
      <node id="9987">
        <label>utility</label>
      </node>
      <node id="9988">
        <label>sstream</label>
      </node>
      <node id="10035">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10009">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="10007" relation="include">
        </childnode>
      </node>
      <node id="9985">
        <label>openscenario_interpreter/functional/fold.hpp</label>
        <link refid="fold_8hpp_source"/>
        <childnode refid="9986" relation="include">
        </childnode>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
      <node id="10018">
        <label>iostream</label>
      </node>
      <node id="10032">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="10039">
        <label>unordered_map</label>
      </node>
      <node id="10045">
        <label>openscenario_interpreter/syntax/dynamics_dimension.hpp</label>
        <link refid="dynamics__dimension_8hpp_source"/>
        <childnode refid="10002" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10013">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="10007" relation="include">
        </childnode>
      </node>
      <node id="10005">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="10006" relation="include">
        </childnode>
      </node>
      <node id="10014">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="10015" relation="include">
        </childnode>
        <childnode refid="10019" relation="include">
        </childnode>
        <childnode refid="10020" relation="include">
        </childnode>
      </node>
      <node id="9995">
        <label>type_traits</label>
      </node>
      <node id="10016">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="10017" relation="include">
        </childnode>
        <childnode refid="10018" relation="include">
        </childnode>
      </node>
      <node id="10033">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="10025" relation="include">
        </childnode>
        <childnode refid="10034" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="10020">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="10018" relation="include">
        </childnode>
        <childnode refid="9989" relation="include">
        </childnode>
      </node>
      <node id="9982">
        <label>memory</label>
      </node>
      <node id="10021">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="9987" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10053">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="10054" relation="include">
        </childnode>
      </node>
      <node id="10050">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="10051" relation="include">
        </childnode>
        <childnode refid="10059" relation="include">
        </childnode>
      </node>
      <node id="10049">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/private_action.hpp</label>
        <link refid="private__action_8hpp_source"/>
        <childnode refid="10050" relation="include">
        </childnode>
        <childnode refid="10061" relation="include">
        </childnode>
      </node>
      <node id="10059">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp</label>
        <link refid="init__actions_8hpp_source"/>
        <childnode refid="10060" relation="include">
        </childnode>
      </node>
      <node id="10047">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_action.hpp</label>
        <link refid="speed__action_8hpp"/>
        <childnode refid="10048" relation="include">
        </childnode>
      </node>
      <node id="10056">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="10057" relation="include">
        </childnode>
      </node>
      <node id="10058">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="10048">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/longitudinal_action.hpp</label>
        <link refid="longitudinal__action_8hpp_source"/>
        <childnode refid="10049" relation="include">
        </childnode>
      </node>
      <node id="10051">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="10052" relation="include">
        </childnode>
      </node>
      <node id="10061">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/private.hpp</label>
        <link refid="private_8hpp_source"/>
        <childnode refid="10059" relation="include">
        </childnode>
      </node>
      <node id="10054">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="10055" relation="include">
        </childnode>
      </node>
      <node id="10057">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="10058" relation="include">
        </childnode>
      </node>
      <node id="10060">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="10056" relation="include">
        </childnode>
      </node>
      <node id="10055">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="10056" relation="include">
        </childnode>
      </node>
      <node id="10052">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="10053" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedAction" prot="public">openscenario_interpreter::syntax::SpeedAction</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__SPEED_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__SPEED_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/procedure.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/rule.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/speed_action_target.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/transition_dynamics.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>SpeedAction<sp/>------------------------------------------------------------</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>&lt;xsd:complexType<sp/>name=&quot;SpeedAction&quot;&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;xsd:all&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;SpeedActionDynamics&quot;<sp/>type=&quot;TransitionDynamics&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;SpeedActionTarget&quot;<sp/>type=&quot;SpeedActionTarget&quot;/&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;/xsd:all&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structopenscenario__interpreter_1_1syntax_1_1SpeedAction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedAction" kindref="compound">SpeedAction</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>inner_scope;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TransitionDynamics" kindref="compound">TransitionDynamics</ref><sp/>speed_action_dynamics;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedActionTarget" kindref="compound">SpeedActionTarget</ref><sp/>speed_action_target;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedAction" kindref="compound">SpeedAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>:<sp/>inner_scope(outer_scope),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>speed_action_dynamics(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readElement&lt;TransitionDynamics&gt;(</highlight><highlight class="stringliteral">&quot;SpeedActionDynamics&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>inner_scope)),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>speed_action_target(readElement&lt;SpeedActionTarget&gt;(</highlight><highlight class="stringliteral">&quot;SpeedActionTarget&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>inner_scope))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;String,<sp/>Boolean&gt;<sp/>accomplishments;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>reset()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>accomplishments.clear();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>actor<sp/>:<sp/>inner_scope.actors)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accomplishments.emplace(actor,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>setLinearTransition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scope::Actor<sp/>&amp;<sp/>actor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setTargetSpeed(actor,<sp/>value,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>setStepTransition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scope::Actor<sp/>&amp;<sp/>actor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>getEntityStatus(actor);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>status.action_status.twist.linear.x<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>setEntityStatus(actor,<sp/>status);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setTargetSpeed(actor,<sp/>status.action_status.twist.linear.x,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Scope::Actor<sp/>&amp;<sp/>actor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="82"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(speed_action_target.is&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" kindref="compound">AbsoluteTargetSpeed</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(speed_action_dynamics.dynamics_shape)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DynamicsShape::linear:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setLinearTransition(actor,<sp/>speed_action_target.as&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" kindref="compound">AbsoluteTargetSpeed</ref>&gt;().value);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DynamicsShape::step:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>setStepTransition(actor,<sp/>speed_action_target.as&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" kindref="compound">AbsoluteTargetSpeed</ref>&gt;().value);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THROW(<ref refid="structopenscenario__interpreter_1_1ImplementationFault" kindref="compound">ImplementationFault</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>THROW(<ref refid="structopenscenario__interpreter_1_1ImplementationFault" kindref="compound">ImplementationFault</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start()</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>actor<sp/>:<sp/>inner_scope.actors)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*this)(actor);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>&amp;<sp/>actor)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compare<sp/>=<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Rule" kindref="compound">Rule</ref>(Rule::equalTo);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(speed_action_target.is&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" kindref="compound">AbsoluteTargetSpeed</ref>&gt;())<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getEntityStatus(actor).action_status.twist.linear.x,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed_action_target.as&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" kindref="compound">AbsoluteTargetSpeed</ref>&gt;().value);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>THROW(<ref refid="structopenscenario__interpreter_1_1ImplementationFault" kindref="compound">ImplementationFault</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1SemanticError" kindref="compound">SemanticError</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>The<sp/>actor<sp/>is<sp/>maybe<sp/>lane-changing<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>update()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>each<sp/>:<sp/>accomplishments)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>each.second<sp/>=<sp/>each.second<sp/>||<sp/>check(each.first);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>accomplished()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>update();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::all_of(std::begin(accomplishments),<sp/>std::end(accomplishments),<sp/>cdr);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__SPEED_ACTION_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_action.hpp"/>
  </compounddef>
</doxygen>
