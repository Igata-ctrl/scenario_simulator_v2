<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="storyboard__element__state_8hpp" kind="file" language="C++">
    <compoundname>storyboard_element_state.hpp</compoundname>
    <includes refid="object_8hpp" local="no">openscenario_interpreter/object.hpp</includes>
    <includes local="no">string</includes>
    <includedby refid="storyboard__element_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element.hpp</includedby>
    <includedby refid="storyboard__element__state__condition_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state_condition.hpp</includedby>
    <incdepgraph>
      <node id="10597">
        <label>functional</label>
      </node>
      <node id="10595">
        <label>openscenario_interpreter/string/cat.hpp</label>
        <link refid="cat_8hpp_source"/>
        <childnode refid="10596" relation="include">
        </childnode>
        <childnode refid="10599" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
      <node id="10613">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="10604" relation="include">
        </childnode>
        <childnode refid="10614" relation="include">
        </childnode>
      </node>
      <node id="10591">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="10592" relation="include">
        </childnode>
        <childnode refid="10605" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
        <childnode refid="10622" relation="include">
        </childnode>
      </node>
      <node id="10592">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="10593" relation="include">
        </childnode>
      </node>
      <node id="10601">
        <label>stdexcept</label>
      </node>
      <node id="10600">
        <label>string</label>
      </node>
      <node id="10604">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="10605" relation="include">
        </childnode>
      </node>
      <node id="10593">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="10594" relation="include">
        </childnode>
        <childnode refid="10602" relation="include">
        </childnode>
        <childnode refid="10606" relation="include">
        </childnode>
        <childnode refid="10608" relation="include">
        </childnode>
        <childnode refid="10610" relation="include">
        </childnode>
        <childnode refid="10612" relation="include">
        </childnode>
        <childnode refid="10619" relation="include">
        </childnode>
        <childnode refid="10620" relation="include">
        </childnode>
        <childnode refid="10621" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
      <node id="10615">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="10616" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
      </node>
      <node id="10608">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="10609" relation="include">
        </childnode>
      </node>
      <node id="10594">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="10595" relation="include">
        </childnode>
        <childnode refid="10601" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
      <node id="10606">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="10607" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
      <node id="10621">
        <label>typeinfo</label>
      </node>
      <node id="10609">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="10604" relation="include">
        </childnode>
      </node>
      <node id="10603">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="10604" relation="include">
        </childnode>
      </node>
      <node id="10617">
        <label>unistd.h</label>
      </node>
      <node id="10622">
        <label>vector</label>
      </node>
      <node id="10610">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="10611" relation="include">
        </childnode>
        <childnode refid="10599" relation="include">
        </childnode>
      </node>
      <node id="10598">
        <label>utility</label>
      </node>
      <node id="10599">
        <label>sstream</label>
      </node>
      <node id="10590">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp</label>
        <link refid="storyboard__element__state_8hpp"/>
        <childnode refid="10591" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
      </node>
      <node id="10607">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="10604" relation="include">
        </childnode>
      </node>
      <node id="10596">
        <label>openscenario_interpreter/functional/fold.hpp</label>
        <link refid="fold_8hpp_source"/>
        <childnode refid="10597" relation="include">
        </childnode>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
      <node id="10614">
        <label>iostream</label>
      </node>
      <node id="10611">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="10604" relation="include">
        </childnode>
      </node>
      <node id="10602">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="10603" relation="include">
        </childnode>
      </node>
      <node id="10612">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="10613" relation="include">
        </childnode>
        <childnode refid="10615" relation="include">
        </childnode>
        <childnode refid="10618" relation="include">
        </childnode>
      </node>
      <node id="10605">
        <label>type_traits</label>
      </node>
      <node id="10616">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="10617" relation="include">
        </childnode>
        <childnode refid="10614" relation="include">
        </childnode>
      </node>
      <node id="10618">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="10614" relation="include">
        </childnode>
        <childnode refid="10600" relation="include">
        </childnode>
      </node>
      <node id="10620">
        <label>memory</label>
      </node>
      <node id="10619">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="10598" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10633">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="10625" relation="include">
        </childnode>
      </node>
      <node id="10630">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="10631" relation="include">
        </childnode>
        <childnode refid="10634" relation="include">
        </childnode>
      </node>
      <node id="10637">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/by_value_condition.hpp</label>
        <link refid="by__value__condition_8hpp_source"/>
        <childnode refid="10638" relation="include">
        </childnode>
      </node>
      <node id="10639">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_group.hpp</label>
        <link refid="condition__group_8hpp_source"/>
        <childnode refid="10640" relation="include">
        </childnode>
      </node>
      <node id="10634">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp</label>
        <link refid="init__actions_8hpp_source"/>
        <childnode refid="10635" relation="include">
        </childnode>
      </node>
      <node id="10638">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition.hpp</label>
        <link refid="condition_8hpp_source"/>
        <childnode refid="10639" relation="include">
        </childnode>
      </node>
      <node id="10627">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="10628" relation="include">
        </childnode>
      </node>
      <node id="10629">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="10636">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state_condition.hpp</label>
        <link refid="storyboard__element__state__condition_8hpp_source"/>
        <childnode refid="10637" relation="include">
        </childnode>
      </node>
      <node id="10631">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="10632" relation="include">
        </childnode>
      </node>
      <node id="10624">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element.hpp</label>
        <link refid="storyboard__element_8hpp_source"/>
        <childnode refid="10625" relation="include">
        </childnode>
        <childnode refid="10630" relation="include">
        </childnode>
        <childnode refid="10631" relation="include">
        </childnode>
        <childnode refid="10632" relation="include">
        </childnode>
        <childnode refid="10633" relation="include">
        </childnode>
        <childnode refid="10626" relation="include">
        </childnode>
      </node>
      <node id="10625">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="10626" relation="include">
        </childnode>
      </node>
      <node id="10628">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="10629" relation="include">
        </childnode>
      </node>
      <node id="10623">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp</label>
        <link refid="storyboard__element__state_8hpp"/>
        <childnode refid="10624" relation="include">
        </childnode>
        <childnode refid="10636" relation="include">
        </childnode>
      </node>
      <node id="10635">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="10627" relation="include">
        </childnode>
      </node>
      <node id="10626">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="10627" relation="include">
        </childnode>
      </node>
      <node id="10632">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="10633" relation="include">
        </childnode>
      </node>
      <node id="10640">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/trigger.hpp</label>
        <link refid="trigger_8hpp_source"/>
        <childnode refid="10631" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" prot="public">openscenario_interpreter::syntax::StoryboardElementState</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="storyboard__element__state_8hpp_1a9c8f164b1af96f53e82a3e558461f33f" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>if (buffer == #IDENTIFIER) { \
    state.value = StoryboardElementState::IDENTIFIER; \
    return is; \
  } static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="194" column="11"/>
      </memberdef>
      <memberdef kind="define" id="storyboard__element__state_8hpp_1a3c260951a894077cecfbb688a36c8fb3" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>ID</defname></param>
        <initializer>case StoryboardElementState::ID: return os &lt;&lt; #ID;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="221" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__STORYBOARD_ELEMENT_STATE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__STORYBOARD_ELEMENT_STATE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>StoryboardElementState<sp/>-------------------------------------------------</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:simpleType<sp/>name=&quot;StoryboardElementState&quot;&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:union&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:restriction<sp/>base=&quot;xsd:string&quot;&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;startTransition&quot;/&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;endTransition&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;stopTransition&quot;/&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;skipTransition&quot;/&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;completeState&quot;/&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;runningState&quot;/&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;standbyState&quot;/&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/xsd:restriction&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;/xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:restriction<sp/>base=&quot;parameter&quot;/&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;/xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;/xsd:union&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>value_type</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>StandBy<sp/>----------------------------------------------------------</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>is<sp/>the<sp/>default<sp/>initialization<sp/>state<sp/>of<sp/>a<sp/>StoryboardElement.<sp/>When</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>is<sp/>in<sp/>this<sp/>state,<sp/>the<sp/>runtime<sp/>instantiation<sp/>of<sp/>the<sp/>StoryboardElement</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>ready<sp/>to<sp/>execute<sp/>once<sp/>given<sp/>a<sp/>startTrigger.<sp/>A<sp/>runtime<sp/>instantiation</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>any<sp/>StoryboardElement<sp/>is<sp/>created<sp/>once<sp/>its<sp/>parent<sp/>element<sp/>is<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>standbyState.<sp/>From<sp/>the<sp/>standbyState,<sp/>the<sp/>Story<sp/>element<sp/>instantaneously</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>transitions<sp/>into<sp/>the<sp/>runningState.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>standbyState,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>Running<sp/>----------------------------------------------------------</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>runningState<sp/>symbolizes<sp/>that<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>runtime</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>instantiation<sp/>is<sp/>now<sp/>ongoing<sp/>and<sp/>has<sp/>not<sp/>yet<sp/>accomplished<sp/>its<sp/>goal.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>concept<sp/>of<sp/>accomplishing<sp/>a<sp/>goal<sp/>varies<sp/>depending<sp/>on<sp/>the<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>StoryboardElement<sp/>under<sp/>consideration:</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Action</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>An<sp/>Action&apos;s<sp/>goal<sp/>is<sp/>a<sp/>function<sp/>of<sp/>the<sp/>Action<sp/>type<sp/>and<sp/>cannot<sp/>be</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>generalized.<sp/>Accomplishing<sp/>an<sp/>Action&apos;s<sp/>goal<sp/>will<sp/>involve<sp/>meeting<sp/>some</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>arbitrary<sp/>prerequisites<sp/>related<sp/>with<sp/>the<sp/>Action<sp/>type<sp/>(for<sp/>example,<sp/>a</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>SpeedAction<sp/>accomplishes<sp/>its<sp/>goal<sp/>when<sp/>the<sp/>considered<sp/>Entity<sp/>is</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>travelling<sp/>at<sp/>the<sp/>prescribed<sp/>speed).<sp/>If<sp/>an<sp/>Action<sp/>is<sp/>acting<sp/>on<sp/>an</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>EntitySelection,<sp/>all<sp/>instances<sp/>of<sp/>Entity<sp/>within<sp/>the<sp/>selection<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>complete<sp/>in<sp/>order<sp/>to<sp/>reach<sp/>the<sp/>completeState<sp/>of<sp/>the<sp/>Action.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Event</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>An<sp/>Event&apos;s<sp/>goal<sp/>is<sp/>accomplished<sp/>when<sp/>all<sp/>its<sp/>Actions<sp/>are<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>completeState.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Maneuver</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>Maneuver&apos;s<sp/>goal<sp/>is<sp/>accomplished<sp/>when<sp/>all<sp/>its<sp/>Events<sp/>are<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>completeState.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>ManeuverGroup</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>ManeuverGroup&apos;s<sp/>goal<sp/>is<sp/>accomplished<sp/>when<sp/>all<sp/>its<sp/>Maneuvers<sp/>are<sp/>in</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>the<sp/>completeState.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Act</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>An<sp/>Act&apos;s<sp/>goal<sp/>is<sp/>accomplished<sp/>when<sp/>all<sp/>its<sp/>ManeuverGroups<sp/>are<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>completeState.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Story</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>A<sp/>Story&apos;s<sp/>goal<sp/>is<sp/>accomplished<sp/>when<sp/>all<sp/>its<sp/>Acts<sp/>are<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>completeState.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>runningState,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>Complete<sp/>---------------------------------------------------------</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>completeState<sp/>signals<sp/>that<sp/>the<sp/>runtime<sp/>instantiation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>StoryboardElement<sp/>cannot<sp/>reach<sp/>a<sp/>running<sp/>state<sp/>without<sp/>external</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>interference.<sp/>If<sp/>the<sp/>affected<sp/>runtime<sp/>instantiation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>StoryboardElement<sp/>is<sp/>defined<sp/>with<sp/>a<sp/>maximumExecutionCount,<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>complete<sp/>implies<sp/>that<sp/>there<sp/>are<sp/>no<sp/>more<sp/>executions<sp/>left<sp/>to<sp/>run,<sp/>or<sp/>a</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stopTransition<sp/>has<sp/>occurred.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Checking<sp/>for<sp/>completeness<sp/>involves<sp/>verifying<sp/>if<sp/>the<sp/>given<sp/>runtime</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>instantiation<sp/>of<sp/>the<sp/>StoryboardElement<sp/>still<sp/>has<sp/>executions<sp/>left<sp/>upon</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>finishing<sp/>the<sp/>runningState.<sp/>This<sp/>check<sp/>returns<sp/>false<sp/>if<sp/>there<sp/>are</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>executions<sp/>left.<sp/>This<sp/>check<sp/>returns<sp/>true<sp/>if<sp/>there<sp/>are<sp/>no<sp/>executions</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>left,<sp/>or<sp/>if<sp/>the<sp/>maximumExecutionCount<sp/>is<sp/>not<sp/>defined<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>StoryboardElement.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Resetting<sp/>the<sp/>completeState<sp/>can<sp/>only<sp/>be<sp/>achieved<sp/>externally<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>parent<sp/>StoryboardElement<sp/>whose<sp/>child<sp/>is<sp/>in<sp/>the<sp/>completeState.<sp/>This<sp/>may</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>only<sp/>occur<sp/>if<sp/>the<sp/>parent<sp/>initiates<sp/>a<sp/>new<sp/>execution.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>completeState,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>Start<sp/>------------------------------------------------------------</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>startTransition<sp/>symbolizes<sp/>that<sp/>the<sp/>execution<sp/>of<sp/>the<sp/>runtime</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>instantiation<sp/>is<sp/>now<sp/>starting.<sp/>The<sp/>startTransition<sp/>can<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>conditions<sp/>to<sp/>trigger<sp/>based<sp/>on<sp/>this<sp/>transition.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>startTransition,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>End<sp/>--------------------------------------------------------------</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>endTransition<sp/>occurs<sp/>when<sp/>the<sp/>runtime<sp/>instantiation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>StoryboardElement<sp/>accomplishes<sp/>its<sp/>goal.<sp/>Once<sp/>the<sp/>endTransition<sp/>occurs,</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>check<sp/>for<sp/>completeness<sp/>is<sp/>made.<sp/>A<sp/>positive<sp/>outcome<sp/>moves<sp/>the<sp/>state</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>machine<sp/>to<sp/>the<sp/>completeState,<sp/>whereas<sp/>a<sp/>negative<sp/>outcome<sp/>moves<sp/>the</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>state<sp/>machine<sp/>to<sp/>the<sp/>standbyState.<sp/>The<sp/>endTransition<sp/>can<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>conditions<sp/>to<sp/>trigger<sp/>based<sp/>on<sp/>this<sp/>transition.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>endTransition,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>Stop<sp/>-------------------------------------------------------------</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>stopTransition<sp/>marks<sp/>the<sp/>reception<sp/>of<sp/>a<sp/>stopTrigger<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>storyboard<sp/>element<sp/>is<sp/>overridden<sp/>(applicable<sp/>for<sp/>Event<sp/>and<sp/>Action).</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>implies<sp/>that<sp/>the<sp/>stopTransition<sp/>cannot<sp/>be<sp/>reached<sp/>other<sp/>than<sp/>with</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>an<sp/>external<sp/>intervention<sp/>to<sp/>the<sp/>runtime<sp/>instantiation<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>StoryboardElement.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>a<sp/>runtime<sp/>instantiation<sp/>of<sp/>a<sp/>StoryboardElement<sp/>goes<sp/>through<sp/>a</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>stopTransition,<sp/>all<sp/>of<sp/>its<sp/>child<sp/>elements<sp/>are<sp/>also<sp/>forced<sp/>to<sp/>go<sp/>through</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>same<sp/>transition.<sp/>The<sp/>stopTransition<sp/>can<sp/>be<sp/>used<sp/>in<sp/>conditions<sp/>to</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>trigger<sp/>based<sp/>on<sp/>this<sp/>transition.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>stopTransition,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>Skip<sp/>-------------------------------------------------------------</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Transition<sp/>marking<sp/>the<sp/>moment<sp/>an<sp/>element<sp/>is<sp/>asked<sp/>to<sp/>move<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>runningState<sp/>but<sp/>is<sp/>instead<sp/>skipped<sp/>so<sp/>it<sp/>remains<sp/>in<sp/>the<sp/>standbyState</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(only<sp/>for<sp/>Event<sp/>instances).<sp/>The<sp/>skipTransition<sp/>can<sp/>be<sp/>used<sp/>in</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>conditions<sp/>to<sp/>trigger<sp/>based<sp/>on<sp/>this<sp/>transition.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>skipTransition,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>(value_type<sp/>value<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>:<sp/>value{value}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>value_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">std::basic_istream&lt;Ts...&gt;<sp/>&amp;<sp/>operator&gt;&gt;(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>std::basic_istream&lt;Ts...&gt;<sp/>&amp;<sp/>is,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref><sp/>&amp;<sp/>state)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer<sp/>{};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>is<sp/>&gt;&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BOILERPLATE(IDENTIFIER)<sp/>\</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"><sp/><sp/>if<sp/>(buffer<sp/>==<sp/>#IDENTIFIER)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>state.value<sp/>=<sp/>StoryboardElementState::IDENTIFIER;<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>is;<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"><sp/><sp/>}<sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>BOILERPLATE(startTransition);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>BOILERPLATE(endTransition);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>BOILERPLATE(stopTransition);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>BOILERPLATE(skipTransition);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>BOILERPLATE(completeState);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>BOILERPLATE(runningState);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>BOILERPLATE(standbyState);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss<sp/>{};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unexpected<sp/>value<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>buffer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;<sp/>specified<sp/>as<sp/>type<sp/>StoryboardElementState&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1SyntaxError" kindref="compound">SyntaxError</ref><sp/>{ss.str()};</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">std::basic_ostream&lt;Ts...&gt;<sp/>&amp;<sp/>operator&lt;&lt;(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Ts...&gt;<sp/>&amp;<sp/>os,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref><sp/>&amp;<sp/>state)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BOILERPLATE(ID)<sp/>case<sp/>StoryboardElementState::ID:<sp/>return<sp/>os<sp/>&lt;&lt;<sp/>#ID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(startTransition);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(endTransition);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(stopTransition);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(skipTransition);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(completeState);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(runningState);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(standbyState);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss<sp/>{};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;enum<sp/>class<sp/>StoryboardElementState<sp/>holds<sp/>unexpected<sp/>value<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">StoryboardElementState::value_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(state.value);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1ImplementationFault" kindref="compound">ImplementationFault</ref><sp/>{ss.str()};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>standby_state<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>make&lt;StoryboardElementState&gt;(StoryboardElementState::standbyState)};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>running_state<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>make&lt;StoryboardElementState&gt;(StoryboardElementState::runningState)};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>complete_state<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>make&lt;StoryboardElementState&gt;(StoryboardElementState::completeState)};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_transition<sp/>{make&lt;StoryboardElementState&gt;(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>StoryboardElementState::startTransition)};</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_transition<sp/>{make&lt;StoryboardElementState&gt;(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>StoryboardElementState::endTransition)};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stop_transition<sp/>{make&lt;StoryboardElementState&gt;(</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>StoryboardElementState::stopTransition)};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>skip_transition<sp/>{make&lt;StoryboardElementState&gt;(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>StoryboardElementState::skipTransition)};</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__STORYBOARD_ELEMENT_STATE_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp"/>
  </compounddef>
</doxygen>
