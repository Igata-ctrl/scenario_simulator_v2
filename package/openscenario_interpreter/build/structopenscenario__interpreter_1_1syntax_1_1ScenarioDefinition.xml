<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition" kind="struct" language="C++" prot="public">
    <compoundname>openscenario_interpreter::syntax::ScenarioDefinition</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1ac696a0d6d1ffc0a7ec9c4c54b7492f5c" prot="public" static="no" mutable="no">
        <type><ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>Element openscenario_interpreter::syntax::ScenarioDefinition::storyboard</definition>
        <argsstring></argsstring>
        <name>storyboard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="47" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1a8c84e643a4ddb18d91e744cc414f5c6e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Node</type>
          </param>
          <param>
            <type>typename <ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref></type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>openscenario_interpreter::syntax::ScenarioDefinition::ScenarioDefinition</definition>
        <argsstring>(const Node &amp;node, Scope &amp;outer_scope)</argsstring>
        <name>ScenarioDefinition</name>
        <param>
          <type>const Node &amp;</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref> &amp;</type>
          <declname>outer_scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="50" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="50" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1a884f2de916acb60d12343bbca4ade3a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) openscenario_interpreter::syntax::ScenarioDefinition::complete</definition>
        <argsstring>(Ts &amp;&amp;... xs)</argsstring>
        <name>complete</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="92" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1abbcb47febcdd33c8607c3b5e6f82ac8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto openscenario_interpreter::syntax::ScenarioDefinition::evaluate</definition>
        <argsstring>(Ts &amp;&amp;... xs)</argsstring>
        <name>evaluate</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="98" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="98" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="611">
        <label>std::shared_ptr&lt; Expression  &gt;</label>
      </node>
      <node id="609">
        <label>openscenario_interpreter::syntax::ScenarioDefinition</label>
        <link refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition"/>
        <childnode refid="610" relation="usage">
          <edgelabel>storyboard</edgelabel>
        </childnode>
      </node>
      <node id="610">
        <label>openscenario_interpreter::Pointer&lt; Expression &gt;</label>
        <link refid="classopenscenario__interpreter_1_1Pointer"/>
        <childnode refid="611" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="46" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" bodystart="45" bodyend="106"/>
    <listofallmembers>
      <member refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1a884f2de916acb60d12343bbca4ade3a1" prot="public" virt="non-virtual"><scope>openscenario_interpreter::syntax::ScenarioDefinition</scope><name>complete</name></member>
      <member refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1abbcb47febcdd33c8607c3b5e6f82ac8e" prot="public" virt="non-virtual"><scope>openscenario_interpreter::syntax::ScenarioDefinition</scope><name>evaluate</name></member>
      <member refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1a8c84e643a4ddb18d91e744cc414f5c6e" prot="public" virt="non-virtual"><scope>openscenario_interpreter::syntax::ScenarioDefinition</scope><name>ScenarioDefinition</name></member>
      <member refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition_1ac696a0d6d1ffc0a7ec9c4c54b7492f5c" prot="public" virt="non-virtual"><scope>openscenario_interpreter::syntax::ScenarioDefinition</scope><name>storyboard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
