<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signal__controller_8hpp" kind="file" language="C++">
    <compoundname>traffic_signal_controller.hpp</compoundname>
    <includes refid="circular__iterator_8hpp" local="no">openscenario_interpreter/iterator/circular_iterator.hpp</includes>
    <includes refid="double_8hpp" local="no">openscenario_interpreter/syntax/double.hpp</includes>
    <includes refid="phase_8hpp" local="no">openscenario_interpreter/syntax/phase.hpp</includes>
    <includes refid="string_8hpp" local="no">openscenario_interpreter/syntax/string.hpp</includes>
    <includedby refid="scope_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/scope.hpp</includedby>
    <includedby refid="traffic__signals_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</includedby>
    <incdepgraph>
      <node id="11873">
        <label>list</label>
      </node>
      <node id="11856">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="11868">
        <label>functional</label>
      </node>
      <node id="11852">
        <label>iomanip</label>
      </node>
      <node id="11850">
        <label>limits</label>
      </node>
      <node id="11846">
        <label>iterator</label>
      </node>
      <node id="11889">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11878" relation="include">
        </childnode>
      </node>
      <node id="11849">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="11853">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="11854" relation="include">
        </childnode>
        <childnode refid="11855" relation="include">
        </childnode>
      </node>
      <node id="11861">
        <label>openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp_source"/>
        <childnode refid="11862" relation="include">
        </childnode>
        <childnode refid="11866" relation="include">
        </childnode>
        <childnode refid="11904" relation="include">
        </childnode>
        <childnode refid="11906" relation="include">
        </childnode>
        <childnode refid="11860" relation="include">
        </childnode>
      </node>
      <node id="11904">
        <label>openscenario_interpreter/syntax/arrow.hpp</label>
        <link refid="arrow_8hpp_source"/>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
      </node>
      <node id="11901">
        <label>pugixml.hpp</label>
      </node>
      <node id="11872">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="11873" relation="include">
        </childnode>
        <childnode refid="11874" relation="include">
        </childnode>
        <childnode refid="11847" relation="include">
        </childnode>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
      <node id="11874">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="11875" relation="include">
        </childnode>
      </node>
      <node id="11845">
        <label>openscenario_interpreter/iterator/circular_iterator.hpp</label>
        <link refid="circular__iterator_8hpp_source"/>
        <childnode refid="11846" relation="include">
        </childnode>
        <childnode refid="11847" relation="include">
        </childnode>
      </node>
      <node id="11857">
        <label>stdexcept</label>
      </node>
      <node id="11892">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11893" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11893">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="11854">
        <label>string</label>
      </node>
      <node id="11848">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11850" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11858" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11905">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
      </node>
      <node id="11878">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="11847" relation="include">
        </childnode>
      </node>
      <node id="11875">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="11863" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11876" relation="include">
        </childnode>
        <childnode refid="11879" relation="include">
        </childnode>
        <childnode refid="11881" relation="include">
        </childnode>
        <childnode refid="11883" relation="include">
        </childnode>
        <childnode refid="11885" relation="include">
        </childnode>
        <childnode refid="11891" relation="include">
        </childnode>
        <childnode refid="11855" relation="include">
        </childnode>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
      <node id="11886">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="11887" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11902">
        <label>regex</label>
      </node>
      <node id="11881">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="11882" relation="include">
        </childnode>
      </node>
      <node id="11860">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11864">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="11900">
        <label>ostream</label>
      </node>
      <node id="11897">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="11851">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="11852" relation="include">
        </childnode>
        <childnode refid="11853" relation="include">
        </childnode>
        <childnode refid="11856" relation="include">
        </childnode>
        <childnode refid="11857" relation="include">
        </childnode>
      </node>
      <node id="11906">
        <label>openscenario_interpreter/syntax/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11905" relation="include">
        </childnode>
      </node>
      <node id="11879">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11880" relation="include">
        </childnode>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
      <node id="11869">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11871" relation="include">
        </childnode>
        <childnode refid="11848" relation="include">
        </childnode>
        <childnode refid="11892" relation="include">
        </childnode>
        <childnode refid="11860" relation="include">
        </childnode>
        <childnode refid="11894" relation="include">
        </childnode>
        <childnode refid="11896" relation="include">
        </childnode>
      </node>
      <node id="11866">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="11867" relation="include">
        </childnode>
        <childnode refid="11868" relation="include">
        </childnode>
        <childnode refid="11869" relation="include">
        </childnode>
        <childnode refid="11898" relation="include">
        </childnode>
        <childnode refid="11899" relation="include">
        </childnode>
        <childnode refid="11902" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
        <childnode refid="11903" relation="include">
        </childnode>
      </node>
      <node id="11862">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="11850" relation="include">
        </childnode>
        <childnode refid="11863" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11864" relation="include">
        </childnode>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
      <node id="11867">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="11855">
        <label>typeinfo</label>
      </node>
      <node id="11882">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="11878" relation="include">
        </childnode>
      </node>
      <node id="11858">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="11877">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11878" relation="include">
        </childnode>
      </node>
      <node id="11894">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11895" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11888">
        <label>unistd.h</label>
      </node>
      <node id="11883">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11884" relation="include">
        </childnode>
      </node>
      <node id="11871">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="11852" relation="include">
        </childnode>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11872" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11899">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="11900" relation="include">
        </childnode>
        <childnode refid="11901" relation="include">
        </childnode>
      </node>
      <node id="11865">
        <label>utility</label>
      </node>
      <node id="11898">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11889" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
      <node id="11880">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11878" relation="include">
        </childnode>
      </node>
      <node id="11844">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller.hpp</label>
        <link refid="traffic__signal__controller_8hpp"/>
        <childnode refid="11845" relation="include">
        </childnode>
        <childnode refid="11848" relation="include">
        </childnode>
        <childnode refid="11859" relation="include">
        </childnode>
        <childnode refid="11860" relation="include">
        </childnode>
      </node>
      <node id="11859">
        <label>openscenario_interpreter/syntax/phase.hpp</label>
        <link refid="phase_8hpp_source"/>
        <childnode refid="11848" relation="include">
        </childnode>
        <childnode refid="11860" relation="include">
        </childnode>
        <childnode refid="11861" relation="include">
        </childnode>
      </node>
      <node id="11870">
        <label>iostream</label>
      </node>
      <node id="11895">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="11903">
        <label>unordered_map</label>
      </node>
      <node id="11884">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="11878" relation="include">
        </childnode>
      </node>
      <node id="11876">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11877" relation="include">
        </childnode>
      </node>
      <node id="11885">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="11886" relation="include">
        </childnode>
        <childnode refid="11889" relation="include">
        </childnode>
        <childnode refid="11890" relation="include">
        </childnode>
      </node>
      <node id="11847">
        <label>type_traits</label>
      </node>
      <node id="11887">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="11888" relation="include">
        </childnode>
        <childnode refid="11870" relation="include">
        </childnode>
      </node>
      <node id="11896">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="11849" relation="include">
        </childnode>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11851" relation="include">
        </childnode>
        <childnode refid="11897" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11890">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="11870" relation="include">
        </childnode>
        <childnode refid="11854" relation="include">
        </childnode>
      </node>
      <node id="11863">
        <label>memory</label>
      </node>
      <node id="11891">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="11865" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11911">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/catalog_locations.hpp</label>
        <link refid="catalog__locations_8hpp_source"/>
        <childnode refid="11912" relation="include">
        </childnode>
      </node>
      <node id="11924">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="11925" relation="include">
        </childnode>
      </node>
      <node id="11921">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="11922" relation="include">
        </childnode>
        <childnode refid="11928" relation="include">
        </childnode>
      </node>
      <node id="11918">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/assign_controller_action.hpp</label>
        <link refid="assign__controller__action_8hpp_source"/>
        <childnode refid="11919" relation="include">
        </childnode>
      </node>
      <node id="11944">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state_action.hpp</label>
        <link refid="traffic__signal__state__action_8hpp_source"/>
        <childnode refid="11941" relation="include">
        </childnode>
      </node>
      <node id="11931">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/object_controller.hpp</label>
        <link refid="object__controller_8hpp_source"/>
        <childnode refid="11932" relation="include">
        </childnode>
      </node>
      <node id="11920">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/private_action.hpp</label>
        <link refid="private__action_8hpp_source"/>
        <childnode refid="11921" relation="include">
        </childnode>
        <childnode refid="11930" relation="include">
        </childnode>
      </node>
      <node id="11940">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller_action.hpp</label>
        <link refid="traffic__signal__controller__action_8hpp_source"/>
        <childnode refid="11941" relation="include">
        </childnode>
      </node>
      <node id="11928">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp</label>
        <link refid="init__actions_8hpp_source"/>
        <childnode refid="11929" relation="include">
        </childnode>
      </node>
      <node id="11938">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/routing_action.hpp</label>
        <link refid="routing__action_8hpp_source"/>
        <childnode refid="11920" relation="include">
        </childnode>
      </node>
      <node id="11936">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route.hpp</label>
        <link refid="route_8hpp_source"/>
        <childnode refid="11937" relation="include">
        </childnode>
      </node>
      <node id="11927">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="11912" relation="include">
        </childnode>
      </node>
      <node id="11908">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="11909" relation="include">
        </childnode>
        <childnode refid="11916" relation="include">
        </childnode>
        <childnode refid="11940" relation="include">
        </childnode>
        <childnode refid="11944" relation="include">
        </childnode>
      </node>
      <node id="11910">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/catalog_location.hpp</label>
        <link refid="catalog__location_8hpp_source"/>
        <childnode refid="11911" relation="include">
        </childnode>
      </node>
      <node id="11915">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="11942">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/infrastructure_action.hpp</label>
        <link refid="infrastructure__action_8hpp_source"/>
        <childnode refid="11943" relation="include">
        </childnode>
      </node>
      <node id="11932">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_object.hpp</label>
        <link refid="scenario__object_8hpp_source"/>
        <childnode refid="11933" relation="include">
        </childnode>
      </node>
      <node id="11937">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/assign_route_action.hpp</label>
        <link refid="assign__route__action_8hpp_source"/>
        <childnode refid="11938" relation="include">
        </childnode>
      </node>
      <node id="11922">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="11923" relation="include">
        </childnode>
      </node>
      <node id="11916">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declarations.hpp</label>
        <link refid="parameter__declarations_8hpp_source"/>
        <childnode refid="11917" relation="include">
        </childnode>
        <childnode refid="11923" relation="include">
        </childnode>
        <childnode refid="11934" relation="include">
        </childnode>
        <childnode refid="11936" relation="include">
        </childnode>
        <childnode refid="11939" relation="include">
        </childnode>
      </node>
      <node id="11939">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle.hpp</label>
        <link refid="vehicle_8hpp_source"/>
        <childnode refid="11935" relation="include">
        </childnode>
      </node>
      <node id="11930">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/private.hpp</label>
        <link refid="private_8hpp_source"/>
        <childnode refid="11928" relation="include">
        </childnode>
      </node>
      <node id="11935">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/entity_object.hpp</label>
        <link refid="entity__object_8hpp_source"/>
        <childnode refid="11932" relation="include">
        </childnode>
      </node>
      <node id="11933">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/entities.hpp</label>
        <link refid="entities_8hpp_source"/>
        <childnode refid="11912" relation="include">
        </childnode>
      </node>
      <node id="11943">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/global_action.hpp</label>
        <link refid="global__action_8hpp_source"/>
        <childnode refid="11921" relation="include">
        </childnode>
      </node>
      <node id="11946">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</label>
        <link refid="road__network_8hpp_source"/>
        <childnode refid="11912" relation="include">
        </childnode>
      </node>
      <node id="11925">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="11926" relation="include">
        </childnode>
      </node>
      <node id="11914">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="11915" relation="include">
        </childnode>
      </node>
      <node id="11913">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/open_scenario_category.hpp</label>
        <link refid="open__scenario__category_8hpp_source"/>
        <childnode refid="11914" relation="include">
        </childnode>
      </node>
      <node id="11909">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/directory.hpp</label>
        <link refid="directory_8hpp_source"/>
        <childnode refid="11910" relation="include">
        </childnode>
      </node>
      <node id="11929">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="11927" relation="include">
        </childnode>
      </node>
      <node id="11907">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller.hpp</label>
        <link refid="traffic__signal__controller_8hpp"/>
        <childnode refid="11908" relation="include">
        </childnode>
        <childnode refid="11945" relation="include">
        </childnode>
      </node>
      <node id="11919">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/controller_action.hpp</label>
        <link refid="controller__action_8hpp_source"/>
        <childnode refid="11920" relation="include">
        </childnode>
      </node>
      <node id="11926">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="11927" relation="include">
        </childnode>
      </node>
      <node id="11941">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_action.hpp</label>
        <link refid="traffic__signal__action_8hpp_source"/>
        <childnode refid="11942" relation="include">
        </childnode>
      </node>
      <node id="11934">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian.hpp</label>
        <link refid="pedestrian_8hpp_source"/>
        <childnode refid="11935" relation="include">
        </childnode>
      </node>
      <node id="11923">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="11924" relation="include">
        </childnode>
      </node>
      <node id="11917">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/controller.hpp</label>
        <link refid="controller_8hpp_source"/>
        <childnode refid="11918" relation="include">
        </childnode>
        <childnode refid="11931" relation="include">
        </childnode>
      </node>
      <node id="11912">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp</label>
        <link refid="scenario__definition_8hpp_source"/>
        <childnode refid="11913" relation="include">
        </childnode>
      </node>
      <node id="11945">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp_source"/>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" prot="public">openscenario_interpreter::syntax::TrafficSignalController</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_CONTROLLER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_CONTROLLER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/iterator/circular_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/double.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/phase.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignalController<sp/>------------------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalController&quot;&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:sequence&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;Phase&quot;<sp/>minOccurs=&quot;0&quot;<sp/>maxOccurs=&quot;unbounded&quot;<sp/>type=&quot;Phase&quot;/&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;/xsd:sequence&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;name&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;delay&quot;<sp/>type=&quot;Double&quot;<sp/>use=&quot;optional&quot;/&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;reference&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;optional&quot;/&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>ID<sp/>of<sp/>the<sp/>traffic<sp/>signal<sp/>controller<sp/>in<sp/>the<sp/>road<sp/>network.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>The<sp/>delay<sp/>to<sp/>the<sp/>controller<sp/>in<sp/>the<sp/>reference<sp/>property.<sp/>A<sp/>controller</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>having<sp/>a<sp/>delay<sp/>to<sp/>another<sp/>one<sp/>means<sp/>that<sp/>its<sp/>first<sp/>phase<sp/>virtually<sp/>starts</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>delaytime<sp/>seconds<sp/>after<sp/>the<sp/>start<sp/>of<sp/>the<sp/>reference&apos;s<sp/>first<sp/>phase.<sp/>This</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>can<sp/>be<sp/>used<sp/>to<sp/>define<sp/>a<sp/>progressive<sp/>signal<sp/>system,<sp/>but<sp/>only<sp/>makes<sp/>sense,</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>if<sp/>the<sp/>total<sp/>times<sp/>of<sp/>all<sp/>connected<sp/>controllers<sp/>are<sp/>the<sp/>same.<sp/>If<sp/>delay<sp/>is</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>set,<sp/>reference<sp/>is<sp/>required.<sp/>Unit:<sp/>s;<sp/>Range:<sp/>[0..inf[.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>CURRENTLY,<sp/>IGNORED!!!</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref><sp/>delay;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>A<sp/>reference<sp/>(ID)<sp/>to<sp/>the<sp/>connected<sp/>controller<sp/>in<sp/>the<sp/>road<sp/>network.<sp/>If</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>reference<sp/>is<sp/>set,<sp/>a<sp/>delay<sp/>is<sp/>required.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>CURRENTLY,<sp/>IGNORED!!!</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>reference;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Phases<sp/>of<sp/>a<sp/>TrafficSignalController.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>std::list&lt;Phase&gt;<sp/>phases;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>CircularIterator&lt;decltype(phases)::iterator&gt;<sp/>current_phase;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>decltype(getCurrentTime())<sp/>current_phase_started_at;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>(<ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>:<sp/>name(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope)),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(readAttribute&lt;Double&gt;(</highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope,<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref>())),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>reference(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;reference&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope,<sp/>String())),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>phases(readElements&lt;Phase,<sp/>0&gt;(</highlight><highlight class="stringliteral">&quot;Phase&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope)),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>current_phase(std::begin(phases),<sp/>std::end(phases),<sp/>std::end(phases)),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>current_phase_started_at(std::numeric_limits&lt;decltype(current_phase_started_at)&gt;::min())</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>theDurationExceeded()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="101"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not<sp/>phases.empty())<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*current_phase).duration<sp/>&lt;=<sp/>(getCurrentTime()<sp/>-<sp/>current_phase_started_at);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theDurationExceeded())<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_phase_started_at<sp/>=<sp/>getCurrentTime();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*++current_phase).evaluate();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_CONTROLLER_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller.hpp"/>
  </compounddef>
</doxygen>
