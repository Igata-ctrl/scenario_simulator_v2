<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signal__state_8hpp" kind="file" language="C++">
    <compoundname>traffic_signal_state.hpp</compoundname>
    <includes refid="attribute_8hpp" local="no">openscenario_interpreter/reader/attribute.hpp</includes>
    <includes refid="arrow_8hpp" local="no">openscenario_interpreter/syntax/arrow.hpp</includes>
    <includes refid="color_8hpp" local="no">openscenario_interpreter/syntax/color.hpp</includes>
    <includes refid="string_8hpp" local="no">openscenario_interpreter/syntax/string.hpp</includes>
    <includedby refid="phase_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/phase.hpp</includedby>
    <incdepgraph>
      <node id="10998">
        <label>list</label>
      </node>
      <node id="10995">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="10990">
        <label>iomanip</label>
      </node>
      <node id="10986">
        <label>functional</label>
      </node>
      <node id="11022">
        <label>limits</label>
      </node>
      <node id="11017">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="11004" relation="include">
        </childnode>
      </node>
      <node id="11021">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="10992">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="10993" relation="include">
        </childnode>
        <childnode refid="10994" relation="include">
        </childnode>
      </node>
      <node id="10983">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp"/>
        <childnode refid="10984" relation="include">
        </childnode>
        <childnode refid="11037" relation="include">
        </childnode>
        <childnode refid="11039" relation="include">
        </childnode>
        <childnode refid="11026" relation="include">
        </childnode>
      </node>
      <node id="11037">
        <label>openscenario_interpreter/syntax/arrow.hpp</label>
        <link refid="arrow_8hpp_source"/>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="11038" relation="include">
        </childnode>
      </node>
      <node id="11034">
        <label>pugixml.hpp</label>
      </node>
      <node id="10997">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="10998" relation="include">
        </childnode>
        <childnode refid="10999" relation="include">
        </childnode>
        <childnode refid="11005" relation="include">
        </childnode>
        <childnode refid="11008" relation="include">
        </childnode>
      </node>
      <node id="10999">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="11000" relation="include">
        </childnode>
      </node>
      <node id="10996">
        <label>stdexcept</label>
      </node>
      <node id="11024">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="11021" relation="include">
        </childnode>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="11025" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11025">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="10993">
        <label>string</label>
      </node>
      <node id="11020">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="11021" relation="include">
        </childnode>
        <childnode refid="11022" relation="include">
        </childnode>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="11023" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11038">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
      </node>
      <node id="11004">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="11005" relation="include">
        </childnode>
      </node>
      <node id="11000">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="11001" relation="include">
        </childnode>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="11002" relation="include">
        </childnode>
        <childnode refid="11006" relation="include">
        </childnode>
        <childnode refid="11009" relation="include">
        </childnode>
        <childnode refid="11011" relation="include">
        </childnode>
        <childnode refid="11013" relation="include">
        </childnode>
        <childnode refid="11019" relation="include">
        </childnode>
        <childnode refid="10994" relation="include">
        </childnode>
        <childnode refid="11008" relation="include">
        </childnode>
      </node>
      <node id="11014">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="11015" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11035">
        <label>regex</label>
      </node>
      <node id="11009">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="11010" relation="include">
        </childnode>
      </node>
      <node id="11026">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11033">
        <label>ostream</label>
      </node>
      <node id="11030">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="10991">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="10990" relation="include">
        </childnode>
        <childnode refid="10992" relation="include">
        </childnode>
        <childnode refid="10995" relation="include">
        </childnode>
        <childnode refid="10996" relation="include">
        </childnode>
      </node>
      <node id="11039">
        <label>openscenario_interpreter/syntax/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="11038" relation="include">
        </childnode>
      </node>
      <node id="11006">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11007" relation="include">
        </childnode>
        <childnode refid="11008" relation="include">
        </childnode>
      </node>
      <node id="10987">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="10989" relation="include">
        </childnode>
        <childnode refid="11020" relation="include">
        </childnode>
        <childnode refid="11024" relation="include">
        </childnode>
        <childnode refid="11026" relation="include">
        </childnode>
        <childnode refid="11027" relation="include">
        </childnode>
        <childnode refid="11029" relation="include">
        </childnode>
      </node>
      <node id="10984">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="10985" relation="include">
        </childnode>
        <childnode refid="10986" relation="include">
        </childnode>
        <childnode refid="10987" relation="include">
        </childnode>
        <childnode refid="11031" relation="include">
        </childnode>
        <childnode refid="11032" relation="include">
        </childnode>
        <childnode refid="11035" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
        <childnode refid="11036" relation="include">
        </childnode>
      </node>
      <node id="10985">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="10994">
        <label>typeinfo</label>
      </node>
      <node id="11010">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="11004" relation="include">
        </childnode>
      </node>
      <node id="11023">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="11003">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11004" relation="include">
        </childnode>
      </node>
      <node id="11027">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="11021" relation="include">
        </childnode>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="11028" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11016">
        <label>unistd.h</label>
      </node>
      <node id="11011">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="11012" relation="include">
        </childnode>
      </node>
      <node id="10989">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="10990" relation="include">
        </childnode>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="10997" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11032">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="11033" relation="include">
        </childnode>
        <childnode refid="11034" relation="include">
        </childnode>
      </node>
      <node id="11008">
        <label>utility</label>
      </node>
      <node id="11031">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="11017" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
        <childnode refid="11008" relation="include">
        </childnode>
      </node>
      <node id="11007">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11004" relation="include">
        </childnode>
      </node>
      <node id="10988">
        <label>iostream</label>
      </node>
      <node id="11028">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="11036">
        <label>unordered_map</label>
      </node>
      <node id="11012">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="11004" relation="include">
        </childnode>
      </node>
      <node id="11002">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11003" relation="include">
        </childnode>
      </node>
      <node id="11013">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="11014" relation="include">
        </childnode>
        <childnode refid="11017" relation="include">
        </childnode>
        <childnode refid="11018" relation="include">
        </childnode>
      </node>
      <node id="11005">
        <label>type_traits</label>
      </node>
      <node id="11015">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="11016" relation="include">
        </childnode>
        <childnode refid="10988" relation="include">
        </childnode>
      </node>
      <node id="11029">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="11021" relation="include">
        </childnode>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="10991" relation="include">
        </childnode>
        <childnode refid="11030" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11018">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="10988" relation="include">
        </childnode>
        <childnode refid="10993" relation="include">
        </childnode>
      </node>
      <node id="11001">
        <label>memory</label>
      </node>
      <node id="11019">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="11008" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11040">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp"/>
        <childnode refid="11041" relation="include">
        </childnode>
      </node>
      <node id="11046">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="11044">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</label>
        <link refid="road__network_8hpp_source"/>
        <childnode refid="11045" relation="include">
        </childnode>
      </node>
      <node id="11045">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="11046" relation="include">
        </childnode>
      </node>
      <node id="11042">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller.hpp</label>
        <link refid="traffic__signal__controller_8hpp_source"/>
        <childnode refid="11043" relation="include">
        </childnode>
      </node>
      <node id="11041">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/phase.hpp</label>
        <link refid="phase_8hpp_source"/>
        <childnode refid="11042" relation="include">
        </childnode>
      </node>
      <node id="11043">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp_source"/>
        <childnode refid="11044" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" prot="public">openscenario_interpreter::syntax::TrafficSignalState</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/reader/attribute.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/arrow.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/color.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignalState<sp/>-----------------------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalState&quot;&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;trafficSignalId&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;state&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>ID<sp/>of<sp/>the<sp/>referenced<sp/>signal<sp/>in<sp/>a<sp/>road<sp/>network.<sp/>The<sp/>signal<sp/>ID<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>listed<sp/>in<sp/>TrafficSignal<sp/>list<sp/>of<sp/>the<sp/>RoadNetwork.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>In<sp/>the<sp/>TierIV<sp/>OpenSCENARIO<sp/>implementation,<sp/>it<sp/>is<sp/>the<sp/>Lanelet<sp/>ID<sp/>(positive</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>integer)<sp/>of<sp/>the<sp/>traffic<sp/>light.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>traffic_signal_id;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>State<sp/>of<sp/>the<sp/>signal.<sp/>The<sp/>available<sp/>states<sp/>are<sp/>listed<sp/>in<sp/>the<sp/>TrafficSignal</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>list<sp/>of<sp/>the<sp/>RoadNetwork.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>state;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>scope)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>:<sp/>traffic_signal_id(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;trafficSignalId&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope)),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>state(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>id()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::lexical_cast&lt;std::int64_t&gt;(traffic_signal_id);<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>DIRTY<sp/>HACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTrafficLightColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>boost::lexical_cast&lt;Color&gt;(state));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setTrafficLightArrow(boost::lexical_cast&lt;Arrow&gt;(state));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::lexical_cast&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref>&gt;(state);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Currently<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state.hpp"/>
  </compounddef>
</doxygen>
