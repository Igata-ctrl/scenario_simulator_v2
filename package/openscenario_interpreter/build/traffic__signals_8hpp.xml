<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signals_8hpp" kind="file" language="C++">
    <compoundname>traffic_signals.hpp</compoundname>
    <includes refid="attribute_8hpp" local="no">openscenario_interpreter/reader/attribute.hpp</includes>
    <includes refid="element_8hpp" local="no">openscenario_interpreter/reader/element.hpp</includes>
    <includes local="no">limits</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="road__network_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</includedby>
    <incdepgraph>
      <node id="11251">
        <label>iomanip</label>
      </node>
      <node id="11225">
        <label>functional</label>
      </node>
      <node id="11255">
        <label>limits</label>
      </node>
      <node id="11270">
        <label>iterator</label>
      </node>
      <node id="11223">
        <label>openscenario_interpreter/string/cat.hpp</label>
        <link refid="cat_8hpp_source"/>
        <childnode refid="11224" relation="include">
        </childnode>
        <childnode refid="11227" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11241">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="11232" relation="include">
        </childnode>
        <childnode refid="11242" relation="include">
        </childnode>
      </node>
      <node id="11253">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="11266">
        <label>pugixml.hpp</label>
      </node>
      <node id="11219">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="11220" relation="include">
        </childnode>
        <childnode refid="11233" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
        <childnode refid="11250" relation="include">
        </childnode>
      </node>
      <node id="11220">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="11221" relation="include">
        </childnode>
      </node>
      <node id="11229">
        <label>stdexcept</label>
      </node>
      <node id="11257">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="11253" relation="include">
        </childnode>
        <childnode refid="11258" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11258">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="11228">
        <label>string</label>
      </node>
      <node id="11252">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="11253" relation="include">
        </childnode>
        <childnode refid="11254" relation="include">
        </childnode>
        <childnode refid="11255" relation="include">
        </childnode>
        <childnode refid="11256" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11232">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="11233" relation="include">
        </childnode>
      </node>
      <node id="11221">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="11222" relation="include">
        </childnode>
        <childnode refid="11230" relation="include">
        </childnode>
        <childnode refid="11234" relation="include">
        </childnode>
        <childnode refid="11236" relation="include">
        </childnode>
        <childnode refid="11238" relation="include">
        </childnode>
        <childnode refid="11240" relation="include">
        </childnode>
        <childnode refid="11247" relation="include">
        </childnode>
        <childnode refid="11248" relation="include">
        </childnode>
        <childnode refid="11249" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11243">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="11244" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11256">
        <label>regex</label>
      </node>
      <node id="11236">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="11237" relation="include">
        </childnode>
      </node>
      <node id="11259">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="11219" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11263">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="11222">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="11223" relation="include">
        </childnode>
        <childnode refid="11229" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11234">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11235" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11216">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="11217" relation="include">
        </childnode>
        <childnode refid="11252" relation="include">
        </childnode>
        <childnode refid="11257" relation="include">
        </childnode>
        <childnode refid="11259" relation="include">
        </childnode>
        <childnode refid="11260" relation="include">
        </childnode>
        <childnode refid="11262" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11214">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="11215" relation="include">
        </childnode>
        <childnode refid="11216" relation="include">
        </childnode>
        <childnode refid="11264" relation="include">
        </childnode>
        <childnode refid="11265" relation="include">
        </childnode>
        <childnode refid="11225" relation="include">
        </childnode>
        <childnode refid="11256" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11267" relation="include">
        </childnode>
      </node>
      <node id="11215">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="11249">
        <label>typeinfo</label>
      </node>
      <node id="11237">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="11232" relation="include">
        </childnode>
      </node>
      <node id="11254">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="11231">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11232" relation="include">
        </childnode>
      </node>
      <node id="11260">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="11253" relation="include">
        </childnode>
        <childnode refid="11261" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11245">
        <label>unistd.h</label>
      </node>
      <node id="11250">
        <label>vector</label>
      </node>
      <node id="11238">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="11239" relation="include">
        </childnode>
        <childnode refid="11227" relation="include">
        </childnode>
      </node>
      <node id="11217">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="11218" relation="include">
        </childnode>
        <childnode refid="11219" relation="include">
        </childnode>
        <childnode refid="11251" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11218">
        <label>boost/io/ios_state.hpp</label>
      </node>
      <node id="11265">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="11266" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11226">
        <label>utility</label>
      </node>
      <node id="11227">
        <label>sstream</label>
      </node>
      <node id="11264">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="11241" relation="include">
        </childnode>
        <childnode refid="11242" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11271">
        <label>openscenario_interpreter/type_traits/if_not_default_constructible.hpp</label>
        <link refid="if__not__default__constructible_8hpp_source"/>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11233" relation="include">
        </childnode>
      </node>
      <node id="11269">
        <label>openscenario_interpreter/iterator/size.hpp</label>
        <link refid="size_8hpp_source"/>
        <childnode refid="11270" relation="include">
        </childnode>
      </node>
      <node id="11235">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11232" relation="include">
        </childnode>
      </node>
      <node id="11224">
        <label>openscenario_interpreter/functional/fold.hpp</label>
        <link refid="fold_8hpp_source"/>
        <childnode refid="11225" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11242">
        <label>iostream</label>
      </node>
      <node id="11261">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="11267">
        <label>unordered_map</label>
      </node>
      <node id="11239">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="11232" relation="include">
        </childnode>
      </node>
      <node id="11268">
        <label>openscenario_interpreter/reader/element.hpp</label>
        <link refid="element_8hpp_source"/>
        <childnode refid="11269" relation="include">
        </childnode>
        <childnode refid="11219" relation="include">
        </childnode>
        <childnode refid="11271" relation="include">
        </childnode>
        <childnode refid="11265" relation="include">
        </childnode>
        <childnode refid="11225" relation="include">
        </childnode>
        <childnode refid="11270" relation="include">
        </childnode>
        <childnode refid="11255" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11267" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
      <node id="11230">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11231" relation="include">
        </childnode>
      </node>
      <node id="11240">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="11241" relation="include">
        </childnode>
        <childnode refid="11243" relation="include">
        </childnode>
        <childnode refid="11246" relation="include">
        </childnode>
      </node>
      <node id="11233">
        <label>type_traits</label>
      </node>
      <node id="11244">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="11245" relation="include">
        </childnode>
        <childnode refid="11242" relation="include">
        </childnode>
      </node>
      <node id="11262">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="11253" relation="include">
        </childnode>
        <childnode refid="11263" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11246">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="11242" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
      </node>
      <node id="11213">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp"/>
        <childnode refid="11214" relation="include">
        </childnode>
        <childnode refid="11268" relation="include">
        </childnode>
        <childnode refid="11255" relation="include">
        </childnode>
        <childnode refid="11228" relation="include">
        </childnode>
        <childnode refid="11226" relation="include">
        </childnode>
        <childnode refid="11250" relation="include">
        </childnode>
      </node>
      <node id="11248">
        <label>memory</label>
      </node>
      <node id="11247">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="11226" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11275">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="11273">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</label>
        <link refid="road__network_8hpp_source"/>
        <childnode refid="11274" relation="include">
        </childnode>
      </node>
      <node id="11274">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="11275" relation="include">
        </childnode>
      </node>
      <node id="11272">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp"/>
        <childnode refid="11273" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" prot="public">openscenario_interpreter::syntax::TrafficSignalState</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Phase" prot="public">openscenario_interpreter::syntax::Phase</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" prot="public">openscenario_interpreter::syntax::TrafficSignalController</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" prot="public">openscenario_interpreter::syntax::TrafficSignals</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNALS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNALS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/reader/attribute.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/reader/element.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignalState<sp/>-----------------------------------------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalState&quot;&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;trafficSignalId&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;state&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>traffic_signal_id,<sp/>state;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>scope)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>:<sp/>traffic_signal_id{readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;trafficSignalId&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope)},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>state{readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope)}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>Phase<sp/>------------------------------------------------------------------</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;Phase&quot;&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:sequence&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;TrafficSignalState&quot;<sp/>minOccurs=&quot;0&quot;<sp/>maxOccurs=&quot;unbounded&quot;<sp/>type=&quot;TrafficSignalState&quot;/&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;/xsd:sequence&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;name&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;duration&quot;<sp/>type=&quot;Double&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structopenscenario__interpreter_1_1syntax_1_1Phase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1Phase" kindref="compound">Phase</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref><sp/>duration;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref><sp/>state;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Phase" kindref="compound">Phase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>:<sp/>name{readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope)},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>duration{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readAttribute&lt;Double&gt;(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;duration&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope,<sp/>Double::infinity())},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>state{readElement&lt;TrafficSignalState&gt;(</highlight><highlight class="stringliteral">&quot;TrafficSignalState&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope)}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignalController<sp/>------------------------------------------------</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalController&quot;&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:sequence&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;Phase&quot;<sp/>minOccurs=&quot;0&quot;<sp/>maxOccurs=&quot;unbounded&quot;<sp/>type=&quot;Phase&quot;/&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;/xsd:sequence&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;name&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;delay&quot;<sp/>type=&quot;Double&quot;<sp/>use=&quot;optional&quot;/&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;reference&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;optional&quot;/&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref><sp/>delay;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>reference;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Phase" kindref="compound">Phase</ref><sp/>phase;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>:<sp/>name(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope)),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(readAttribute&lt;Double&gt;(</highlight><highlight class="stringliteral">&quot;delay&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope,<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref>())),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>reference(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;reference&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope,<sp/>String())),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>phase(readElement&lt;Phase&gt;(</highlight><highlight class="stringliteral">&quot;Phase&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope))</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====<sp/>TrafficSignals<sp/>=========================================================</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignals&quot;&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;xsd:sequence&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;TrafficSignalController&quot;<sp/>minOccurs=&quot;0&quot;<sp/>maxOccurs=&quot;unbounded&quot;<sp/>type=&quot;TrafficSignalController&quot;/&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;/xsd:sequence&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;TrafficSignalController&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="structopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>callWithElements(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/></highlight><highlight class="stringliteral">&quot;TrafficSignalController&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>unbounded,<sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>node)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emplace_back(node,<sp/>outer_scope);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNALS_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp"/>
  </compounddef>
</doxygen>
