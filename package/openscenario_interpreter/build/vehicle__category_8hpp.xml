<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="vehicle__category_8hpp" kind="file" language="C++">
    <compoundname>vehicle_category.hpp</compoundname>
    <includes refid="object_8hpp" local="no">openscenario_interpreter/object.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includedby refid="vehicle_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle.hpp</includedby>
    <incdepgraph>
      <node id="11945">
        <label>functional</label>
      </node>
      <node id="11943">
        <label>openscenario_interpreter/string/cat.hpp</label>
        <link refid="cat_8hpp_source"/>
        <childnode refid="11944" relation="include">
        </childnode>
        <childnode refid="11947" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
      <node id="11961">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="11952" relation="include">
        </childnode>
        <childnode refid="11962" relation="include">
        </childnode>
      </node>
      <node id="11939">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="11940" relation="include">
        </childnode>
        <childnode refid="11953" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
        <childnode refid="11970" relation="include">
        </childnode>
      </node>
      <node id="11940">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="11941" relation="include">
        </childnode>
      </node>
      <node id="11949">
        <label>stdexcept</label>
      </node>
      <node id="11948">
        <label>string</label>
      </node>
      <node id="11952">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="11953" relation="include">
        </childnode>
      </node>
      <node id="11941">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="11942" relation="include">
        </childnode>
        <childnode refid="11950" relation="include">
        </childnode>
        <childnode refid="11954" relation="include">
        </childnode>
        <childnode refid="11956" relation="include">
        </childnode>
        <childnode refid="11958" relation="include">
        </childnode>
        <childnode refid="11960" relation="include">
        </childnode>
        <childnode refid="11967" relation="include">
        </childnode>
        <childnode refid="11968" relation="include">
        </childnode>
        <childnode refid="11969" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
      <node id="11963">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="11964" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
      </node>
      <node id="11956">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="11957" relation="include">
        </childnode>
      </node>
      <node id="11942">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="11943" relation="include">
        </childnode>
        <childnode refid="11949" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
      <node id="11954">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11955" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
      <node id="11969">
        <label>typeinfo</label>
      </node>
      <node id="11957">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="11952" relation="include">
        </childnode>
      </node>
      <node id="11951">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11952" relation="include">
        </childnode>
      </node>
      <node id="11965">
        <label>unistd.h</label>
      </node>
      <node id="11970">
        <label>vector</label>
      </node>
      <node id="11958">
        <label>openscenario_interpreter/type_traits/if_has_member_function_state.hpp</label>
        <link refid="if__has__member__function__state_8hpp_source"/>
        <childnode refid="11959" relation="include">
        </childnode>
        <childnode refid="11947" relation="include">
        </childnode>
      </node>
      <node id="11946">
        <label>utility</label>
      </node>
      <node id="11947">
        <label>sstream</label>
      </node>
      <node id="11955">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="11952" relation="include">
        </childnode>
      </node>
      <node id="11944">
        <label>openscenario_interpreter/functional/fold.hpp</label>
        <link refid="fold_8hpp_source"/>
        <childnode refid="11945" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
      <node id="11962">
        <label>iostream</label>
      </node>
      <node id="11959">
        <label>openscenario_interpreter/type_traits/has_member_function_state.hpp</label>
        <link refid="has__member__function__state_8hpp_source"/>
        <childnode refid="11952" relation="include">
        </childnode>
      </node>
      <node id="11950">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="11951" relation="include">
        </childnode>
      </node>
      <node id="11960">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="11961" relation="include">
        </childnode>
        <childnode refid="11963" relation="include">
        </childnode>
        <childnode refid="11966" relation="include">
        </childnode>
      </node>
      <node id="11953">
        <label>type_traits</label>
      </node>
      <node id="11964">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="11965" relation="include">
        </childnode>
        <childnode refid="11962" relation="include">
        </childnode>
      </node>
      <node id="11938">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp</label>
        <link refid="vehicle__category_8hpp"/>
        <childnode refid="11939" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
      <node id="11966">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="11962" relation="include">
        </childnode>
        <childnode refid="11948" relation="include">
        </childnode>
      </node>
      <node id="11968">
        <label>memory</label>
      </node>
      <node id="11967">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="11946" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="11977">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="11974">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_object.hpp</label>
        <link refid="scenario__object_8hpp_source"/>
        <childnode refid="11975" relation="include">
        </childnode>
      </node>
      <node id="11972">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle.hpp</label>
        <link refid="vehicle_8hpp_source"/>
        <childnode refid="11973" relation="include">
        </childnode>
      </node>
      <node id="11973">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/entity_object.hpp</label>
        <link refid="entity__object_8hpp_source"/>
        <childnode refid="11974" relation="include">
        </childnode>
      </node>
      <node id="11975">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/entities.hpp</label>
        <link refid="entities_8hpp_source"/>
        <childnode refid="11976" relation="include">
        </childnode>
      </node>
      <node id="11976">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="11977" relation="include">
        </childnode>
      </node>
      <node id="11971">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp</label>
        <link refid="vehicle__category_8hpp"/>
        <childnode refid="11972" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" prot="public">openscenario_interpreter::syntax::VehicleCategory</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="vehicle__category_8hpp_1a9c8f164b1af96f53e82a3e558461f33f" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>if (buffer == #IDENTIFIER) { \
    category.value = VehicleCategory::IDENTIFIER; \
    return is; \
  } static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="85" column="11"/>
      </memberdef>
      <memberdef kind="define" id="vehicle__category_8hpp_1a9c8f164b1af96f53e82a3e558461f33f" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>if (buffer == #IDENTIFIER) { \
    std::stringstream ss { \
    }; \
    ss &lt;&lt; &quot;given value \&apos;&quot; &lt;&lt; buffer &lt;&lt; \
      &quot;\&apos; is valid OpenSCENARIO value of type VehicleCategory, but it is not supported&quot;; \
    throw ImplementationFault {ss.str()}; \
  } static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="99" column="11"/>
      </memberdef>
      <memberdef kind="define" id="vehicle__category_8hpp_1a042387daeb4ef49d52ad4fb5f73a8f40" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>NAME</defname></param>
        <initializer>case VehicleCategory::NAME: return os &lt;&lt; #NAME;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="127" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__VEHICLE_CATEGORY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__VEHICLE_CATEGORY_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>====<sp/>VehicleCategory<sp/>======================================================</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>&lt;xsd:simpleType<sp/>name=&quot;VehicleCategory&quot;&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;xsd:union&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:restriction<sp/>base=&quot;xsd:string&quot;&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;car&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;van&quot;/&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;truck&quot;/&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;trailer&quot;/&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;semitrailer&quot;/&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;bus&quot;/&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;motorbike&quot;/&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;bicycle&quot;/&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;train&quot;/&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:enumeration<sp/>value=&quot;tram&quot;/&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/xsd:restriction&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;/xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:restriction<sp/>base=&quot;parameter&quot;/&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&lt;/xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;/xsd:union&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>&lt;/xsd:simpleType&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>value_type</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>bicycle,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>bus,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>car,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>motorbike,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>semitrailer,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>trailer,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>train,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>tram,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>truck,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>van,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref>(value_type<sp/>value<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>:<sp/>value{value}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>value_type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">std::basic_istream&lt;Ts...&gt;<sp/>&amp;<sp/>operator&gt;&gt;(std::basic_istream&lt;Ts...&gt;<sp/>&amp;<sp/>is,<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref><sp/>&amp;<sp/>category)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer<sp/>{};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>is<sp/>&gt;&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BOILERPLATE(IDENTIFIER)<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/>if<sp/>(buffer<sp/>==<sp/>#IDENTIFIER)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>category.value<sp/>=<sp/>VehicleCategory::IDENTIFIER;<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>is;<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/>}<sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>BOILERPLATE(bicycle);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>BOILERPLATE(bus);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>BOILERPLATE(car);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>BOILERPLATE(motorbike);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>BOILERPLATE(truck);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BOILERPLATE(IDENTIFIER)<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>if<sp/>(buffer<sp/>==<sp/>#IDENTIFIER)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>};<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>&quot;given<sp/>value<sp/>\&apos;&quot;<sp/>&lt;&lt;<sp/>buffer<sp/>&lt;&lt;<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>&quot;\&apos;<sp/>is<sp/>valid<sp/>OpenSCENARIO<sp/>value<sp/>of<sp/>type<sp/>VehicleCategory,<sp/>but<sp/>it<sp/>is<sp/>not<sp/>supported&quot;;<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>throw<sp/>ImplementationFault<sp/>{ss.str()};<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>}<sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>BOILERPLATE(semitrailer);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>BOILERPLATE(trailer);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>BOILERPLATE(train);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>BOILERPLATE(tram);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>BOILERPLATE(van);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss<sp/>{};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unexpected<sp/>value<sp/>\&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>buffer<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&apos;<sp/>specified<sp/>as<sp/>type<sp/>VehicleCategory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1SyntaxError" kindref="compound">SyntaxError</ref><sp/>{ss.str()};</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">std::basic_ostream&lt;Ts...&gt;<sp/>&amp;<sp/>operator&lt;&lt;(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>std::basic_ostream&lt;Ts...&gt;<sp/>&amp;<sp/>os,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref><sp/>&amp;<sp/>category)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(category)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BOILERPLATE(NAME)<sp/>case<sp/>VehicleCategory::NAME:<sp/>return<sp/>os<sp/>&lt;&lt;<sp/>#NAME;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(bicycle);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(bus);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(car);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(motorbike);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(semitrailer);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(trailer);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(train);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(tram);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(truck);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(van);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss<sp/>{};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;enum<sp/>class<sp/>VehicleCategory<sp/>holds<sp/>unexpected<sp/>value<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">VehicleCategory::value_type</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(category);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1ImplementationFault" kindref="compound">ImplementationFault</ref><sp/>{ss.str()};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__VEHICLE_CATEGORY_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp"/>
  </compounddef>
</doxygen>
