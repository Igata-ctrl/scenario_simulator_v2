<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ego__entity_8cpp" kind="file" language="C++">
    <compoundname>ego_entity.cpp</compoundname>
    <includes local="no">awapi_accessor/accessor.hpp</includes>
    <includes local="no">openscenario_msgs/msg/waypoints_array.hpp</includes>
    <includes local="no">quaternion_operation/quaternion_operation.h</includes>
    <includes refid="ego__entity_8hpp" local="no">simulation_api/entity/ego_entity.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <incdepgraph>
      <node id="4543">
        <label>simulation_api/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4544" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4546" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
      </node>
      <node id="4559">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="4598">
        <label>system_error</label>
      </node>
      <node id="4576">
        <label>functional</label>
      </node>
      <node id="4553">
        <label>queue</label>
      </node>
      <node id="4499">
        <label>awapi_accessor/accessor.hpp</label>
      </node>
      <node id="4582">
        <label>simulation_api/vehicle_model/sim_model_time_delay.hpp</label>
        <link refid="sim__model__time__delay_8hpp"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4581" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4551" relation="include">
        </childnode>
        <childnode refid="4553" relation="include">
        </childnode>
        <childnode refid="4585" relation="include">
        </childnode>
      </node>
      <node id="4586">
        <label>autoware_auto_msgs/msg/complex32.hpp</label>
      </node>
      <node id="4546">
        <label>limits</label>
      </node>
      <node id="4518">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="4554">
        <label>simulation_api/entity/vehicle_parameter.hpp</label>
        <link refid="vehicle__parameter_8hpp_source"/>
        <childnode refid="4555" relation="include">
        </childnode>
        <childnode refid="4552" relation="include">
        </childnode>
        <childnode refid="4556" relation="include">
        </childnode>
        <childnode refid="4557" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4513" relation="include">
        </childnode>
        <childnode refid="4558" relation="include">
        </childnode>
        <childnode refid="4559" relation="include">
        </childnode>
        <childnode refid="4560" relation="include">
        </childnode>
        <childnode refid="4561" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
      </node>
      <node id="4548">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="4575">
        <label>behaviortree_cpp_v3/loggers/bt_cout_logger.h</label>
      </node>
      <node id="4562">
        <label>simulation_api/behavior/vehicle/lane_change_action.hpp</label>
        <link refid="lane__change__action_8hpp_source"/>
        <childnode refid="4507" relation="include">
        </childnode>
        <childnode refid="4554" relation="include">
        </childnode>
        <childnode refid="4563" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4572" relation="include">
        </childnode>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
      </node>
      <node id="4521">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="4500">
        <label>openscenario_msgs/msg/waypoints_array.hpp</label>
      </node>
      <node id="4533">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="4570">
        <label>openscenario_msgs/msg/entity_trajectory.hpp</label>
      </node>
      <node id="4525">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="4517">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="4557">
        <label>pugixml.hpp</label>
      </node>
      <node id="4560">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="4512">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="4555">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="4505">
        <label>simulation_api/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp_source"/>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4542" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4536" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
      </node>
      <node id="4574">
        <label>simulation_api/behavior/vehicle/behavior_tree.hpp</label>
        <link refid="vehicle_2behavior__tree_8hpp_source"/>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4568" relation="include">
        </childnode>
        <childnode refid="4511" relation="include">
        </childnode>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4575" relation="include">
        </childnode>
        <childnode refid="4576" relation="include">
        </childnode>
        <childnode refid="4537" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
      </node>
      <node id="4547">
        <label>simulation_api/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
        <childnode refid="4550" relation="include">
        </childnode>
        <childnode refid="4537" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
      </node>
      <node id="4556">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="4550">
        <label>cassert</label>
      </node>
      <node id="4597">
        <label>stdexcept</label>
      </node>
      <node id="4580">
        <label>eigen3/Eigen/LU</label>
      </node>
      <node id="4510">
        <label>openscenario_msgs/msg/hermite_curve.hpp</label>
      </node>
      <node id="4573">
        <label>behaviortree_cpp_v3/bt_factory.h</label>
      </node>
      <node id="4539">
        <label>string</label>
      </node>
      <node id="4568">
        <label>openscenario_msgs/msg/obstacle.hpp</label>
      </node>
      <node id="4529">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="4587">
        <label>autoware_auto_msgs/msg/vehicle_control_command.hpp</label>
      </node>
      <node id="4537">
        <label>map</label>
      </node>
      <node id="4592">
        <label>tf2/utils.h</label>
      </node>
      <node id="4552">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="4516">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="4532">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="4566">
        <label>simulation_api/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="4507" relation="include">
        </childnode>
        <childnode refid="4567" relation="include">
        </childnode>
        <childnode refid="4511" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4545" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
      </node>
      <node id="4504">
        <label>simulation_api/entity/entity_base.hpp</label>
        <link refid="entity__base_8hpp_source"/>
        <childnode refid="4505" relation="include">
        </childnode>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4552" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4536" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4553" relation="include">
        </childnode>
      </node>
      <node id="4522">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="4545">
        <label>exception</label>
      </node>
      <node id="4588">
        <label>autoware_auto_msgs/msg/vehicle_kinematic_state.hpp</label>
      </node>
      <node id="4581">
        <label>simulation_api/vehicle_model/sim_model_interface.hpp</label>
        <link refid="sim__model__interface_8hpp"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
      </node>
      <node id="4520">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="4571">
        <label>openscenario_msgs/msg/driver_model.hpp</label>
      </node>
      <node id="4513">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="4515">
        <label>simulation_api/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
      </node>
      <node id="4507">
        <label>simulation_api/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="4508" relation="include">
        </childnode>
        <childnode refid="4510" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
        <childnode refid="4511" relation="include">
        </childnode>
        <childnode refid="4512" relation="include">
        </childnode>
        <childnode refid="4513" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
      </node>
      <node id="4531">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="4530">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="4501">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="4564">
        <label>behaviortree_cpp_v3/action_node.h</label>
      </node>
      <node id="4528">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="4511">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="4596">
        <label>future</label>
      </node>
      <node id="4569">
        <label>boost/algorithm/clamp.hpp</label>
      </node>
      <node id="4498">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/entity/ego_entity.cpp</label>
        <link refid="ego__entity_8cpp"/>
        <childnode refid="4499" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
        <childnode refid="4502" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
      </node>
      <node id="4567">
        <label>openscenario_msgs/msg/catmull_rom_spline.hpp</label>
      </node>
      <node id="4509">
        <label>vector</label>
      </node>
      <node id="4590">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="4589">
        <label>autoware_auto_msgs/msg/vehicle_state_command.hpp</label>
      </node>
      <node id="4540">
        <label>utility</label>
      </node>
      <node id="4561">
        <label>sstream</label>
      </node>
      <node id="4584">
        <label>math.h</label>
      </node>
      <node id="4535">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="4591">
        <label>sys/wait.h</label>
      </node>
      <node id="4595">
        <label>cstdlib</label>
      </node>
      <node id="4527">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="4558">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="4578">
        <label>simulation_api/vehicle_model/sim_model_ideal.hpp</label>
        <link refid="sim__model__ideal_8hpp"/>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4581" relation="include">
        </childnode>
        <childnode refid="4551" relation="include">
        </childnode>
      </node>
      <node id="4551">
        <label>iostream</label>
      </node>
      <node id="4524">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="4585">
        <label>deque</label>
      </node>
      <node id="4502">
        <label>simulation_api/entity/ego_entity.hpp</label>
        <link refid="ego__entity_8hpp_source"/>
        <childnode refid="4503" relation="include">
        </childnode>
        <childnode refid="4578" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4586" relation="include">
        </childnode>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4588" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4499" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4557" relation="include">
        </childnode>
        <childnode refid="4591" relation="include">
        </childnode>
        <childnode refid="4592" relation="include">
        </childnode>
        <childnode refid="4593" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4596" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4597" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
        <childnode refid="4599" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
      </node>
      <node id="4538">
        <label>unordered_map</label>
      </node>
      <node id="4519">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="4565">
        <label>simulation_api/behavior/action_node.hpp</label>
        <link refid="action__node_8hpp_source"/>
        <childnode refid="4564" relation="include">
        </childnode>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4566" relation="include">
        </childnode>
        <childnode refid="4504" relation="include">
        </childnode>
        <childnode refid="4505" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4568" relation="include">
        </childnode>
        <childnode refid="4569" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
      </node>
      <node id="4572">
        <label>behaviortree_cpp_v3/behavior_tree.h</label>
      </node>
      <node id="4536">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="4526">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="4534">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="4594">
        <label>chrono</label>
      </node>
      <node id="4579">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="4514">
        <label>boost/optional.hpp</label>
      </node>
      <node id="4583">
        <label>simulation_api/vehicle_model/sim_model_util.hpp</label>
        <link refid="sim__model__util_8hpp_source"/>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4523">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="4599">
        <label>thread</label>
      </node>
      <node id="4503">
        <label>simulation_api/entity/vehicle_entity.hpp</label>
        <link refid="vehicle__entity_8hpp_source"/>
        <childnode refid="4504" relation="include">
        </childnode>
        <childnode refid="4554" relation="include">
        </childnode>
        <childnode refid="4562" relation="include">
        </childnode>
        <childnode refid="4574" relation="include">
        </childnode>
        <childnode refid="4577" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4571" relation="include">
        </childnode>
        <childnode refid="4556" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4557" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
      </node>
      <node id="4577">
        <label>simulation_api/behavior/route_planner.hpp</label>
        <link refid="route__planner_8hpp_source"/>
        <childnode refid="4506" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4553" relation="include">
        </childnode>
      </node>
      <node id="4593">
        <label>algorithm</label>
      </node>
      <node id="4544">
        <label>simulation_api/entity/exception.hpp</label>
        <link refid="exception_8hpp_source"/>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4545" relation="include">
        </childnode>
      </node>
      <node id="4549">
        <label>stdio.h</label>
      </node>
      <node id="4542">
        <label>simulation_api/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="4515" relation="include">
        </childnode>
        <childnode refid="4543" relation="include">
        </childnode>
        <childnode refid="4547" relation="include">
        </childnode>
        <childnode refid="4544" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4546" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
        <childnode refid="4551" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
      </node>
      <node id="4541">
        <label>memory</label>
      </node>
      <node id="4506">
        <label>simulation_api/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="4507" relation="include">
        </childnode>
        <childnode refid="4515" relation="include">
        </childnode>
        <childnode refid="4516" relation="include">
        </childnode>
        <childnode refid="4517" relation="include">
        </childnode>
        <childnode refid="4518" relation="include">
        </childnode>
        <childnode refid="4519" relation="include">
        </childnode>
        <childnode refid="4520" relation="include">
        </childnode>
        <childnode refid="4521" relation="include">
        </childnode>
        <childnode refid="4522" relation="include">
        </childnode>
        <childnode refid="4523" relation="include">
        </childnode>
        <childnode refid="4524" relation="include">
        </childnode>
        <childnode refid="4525" relation="include">
        </childnode>
        <childnode refid="4526" relation="include">
        </childnode>
        <childnode refid="4527" relation="include">
        </childnode>
        <childnode refid="4528" relation="include">
        </childnode>
        <childnode refid="4529" relation="include">
        </childnode>
        <childnode refid="4530" relation="include">
        </childnode>
        <childnode refid="4531" relation="include">
        </childnode>
        <childnode refid="4532" relation="include">
        </childnode>
        <childnode refid="4533" relation="include">
        </childnode>
        <childnode refid="4534" relation="include">
        </childnode>
        <childnode refid="4535" relation="include">
        </childnode>
        <childnode refid="4536" relation="include">
        </childnode>
        <childnode refid="4514" relation="include">
        </childnode>
        <childnode refid="4537" relation="include">
        </childnode>
        <childnode refid="4538" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4540" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
      </node>
      <node id="4563">
        <label>simulation_api/behavior/vehicle/vehicle_action_node.hpp</label>
        <link refid="vehicle__action__node_8hpp_source"/>
        <childnode refid="4564" relation="include">
        </childnode>
        <childnode refid="4554" relation="include">
        </childnode>
        <childnode refid="4565" relation="include">
        </childnode>
        <childnode refid="4566" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4568" relation="include">
        </childnode>
        <childnode refid="4571" relation="include">
        </childnode>
        <childnode refid="4556" relation="include">
        </childnode>
        <childnode refid="4539" relation="include">
        </childnode>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4509" relation="include">
        </childnode>
      </node>
      <node id="4508">
        <label>simulation_api/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="4509" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacesimulation__api">simulation_api</innernamespace>
    <innernamespace refid="namespacesimulation__api_1_1entity">simulation_api::entity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;awapi_accessor/accessor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_msgs/msg/waypoints_array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;quaternion_operation/quaternion_operation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_api/entity/ego_entity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacesimulation__api" kindref="compound">simulation_api</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">entity</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">std::unordered_map&lt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>std::string,<sp/>std::shared_ptr&lt;autoware_api::Accessor&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">&gt;<sp/>EgoEntity::autowares<sp/>{};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EgoEntity::requestAssignRoute(</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;openscenario_msgs::msg::LaneletPose&gt;<sp/>&amp;<sp/>waypoints)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>assert(1<sp/>&lt;<sp/>waypoints.size());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>destination<sp/>=<sp/>(*hdmap_utils_ptr_).toMapPose(waypoints.back());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>std::vector&lt;geometry_msgs::msg::PoseStamped&gt;<sp/>constraints<sp/>{};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=<sp/>std::cbegin(waypoints);<sp/>std::next(iter)<sp/>!=<sp/>std::cend(waypoints);<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>constraints.push_back((*hdmap_utils_ptr_).toMapPose(*iter));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>requestAcquirePosition(destination,<sp/>constraints);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">openscenario_msgs::msg::WaypointsArray<sp/>EgoEntity::getWaypoints()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="50"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::WaypointsArray<sp/>waypoints<sp/>{};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>point<sp/>:<sp/>std::atomic_load(&amp;autowares.at(name))-&gt;getTrajectory().points)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoints.waypoints.emplace_back(point.pose.position);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>waypoints;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EgoEntity::setStatus(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::EntityStatus<sp/>&amp;<sp/>status)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>Currently,<sp/>setStatus<sp/>always<sp/>succeeds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>VehicleEntity::setStatus(status);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>getStatus();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(autoware_initialized)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>updateAutoware(current.pose);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initial_pose_)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_pose_<sp/>=<sp/>current.pose;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EgoEntity::onUpdate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_time)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>input(2);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>input<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::atomic_load(&amp;autowares.at(name))-&gt;getVehicleCommand().control.velocity,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::atomic_load(&amp;autowares.at(name))-&gt;getVehicleCommand().control.steering_angle;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>(*vehicle_model_ptr_).setInput(input);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>(*vehicle_model_ptr_).update(step_time);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>setStatus(getEntityStatus(current_time<sp/>+<sp/>step_time,<sp/>step_time));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_linear_velocity_)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>linear_jerk_<sp/>=<sp/>(vehicle_model_ptr_-&gt;getVx()<sp/>-<sp/>previous_linear_velocity_.get())<sp/>/<sp/>step_time;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>linear_jerk_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>previous_linear_velocity_<sp/>=<sp/>vehicle_model_ptr_-&gt;getVx();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>previous_angular_velocity_<sp/>=<sp/>vehicle_model_ptr_-&gt;getWz();</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::EntityStatus<sp/>EgoEntity::getEntityStatus(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_time)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Vector3<sp/>rpy;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>rpy.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>rpy.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>rpy.z<sp/>=<sp/>vehicle_model_ptr_-&gt;getYaw();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.position.x<sp/>=<sp/>vehicle_model_ptr_-&gt;getX();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.position.y<sp/>=<sp/>vehicle_model_ptr_-&gt;getY();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.position.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>pose.orientation<sp/>=<sp/>quaternion_operation::convertEulerAngleToQuaternion(rpy);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Twist<sp/>twist;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>twist.linear.x<sp/>=<sp/>vehicle_model_ptr_-&gt;getVx();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>twist.angular.z<sp/>=<sp/>vehicle_model_ptr_-&gt;getWz();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Accel<sp/>accel;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_angular_velocity_<sp/>&amp;&amp;<sp/>previous_linear_velocity_)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accel.linear.x<sp/>=<sp/>(twist.linear.x<sp/>-<sp/>previous_linear_velocity_.get())<sp/>/<sp/>step_time;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accel.angular.z<sp/>=<sp/>(twist.angular.z<sp/>-<sp/>previous_angular_velocity_.get())<sp/>/<sp/>step_time;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>v(3);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>v(0)<sp/>=<sp/>pose.position.x;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>v(1)<sp/>=<sp/>pose.position.y;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>v(2)<sp/>=<sp/>pose.position.z;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>=<sp/>quaternion_operation::getRotationMatrix((*initial_pose_).orientation)<sp/>*<sp/>v;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::EntityStatus<sp/>status;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>status.time<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>status.type.type<sp/>=<sp/>openscenario_msgs::msg::EntityType::EGO;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>status.bounding_box<sp/>=<sp/>getBoundingBox();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>status.action_status.twist<sp/>=<sp/>twist;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>status.action_status.accel<sp/>=<sp/>accel;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>status.pose.position.x<sp/>=<sp/>v(0)<sp/>+<sp/>initial_pose_.get().position.x;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>status.pose.position.y<sp/>=<sp/>v(1)<sp/>+<sp/>initial_pose_.get().position.y;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>status.pose.position.z<sp/>=<sp/>v(2)<sp/>+<sp/>initial_pose_.get().position.z;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>closest_lanelet_id<sp/>=<sp/>hdmap_utils_ptr_-&gt;getClosetLanletId(status.pose);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closest_lanelet_id)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SimulationRuntimeError(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>closest<sp/>lane.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classsimulation__api_1_1math_1_1CatmullRomSpline" kindref="compound">simulation_api::math::CatmullRomSpline</ref><sp/>spline(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hdmap_utils_ptr_-&gt;getCenterPoints(closest_lanelet_id.get()));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s_value<sp/>=<sp/>spline.getSValue(status.pose.position);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s_value)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status.pose.position.z<sp/>=<sp/>spline.getPoint(s_value.get()).z;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>status.pose.orientation<sp/>=<sp/>initial_pose_.get().orientation<sp/>*<sp/>pose.orientation;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lanelet_pose<sp/>=<sp/>hdmap_utils_ptr_-&gt;toLaneletPose(status.pose);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>status.lanelet_pose_valid<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lanelet_pose);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lanelet_pose)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status.lanelet_pose<sp/>=<sp/>lanelet_pose.get();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>simulation_api</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/entity/ego_entity.cpp"/>
  </compounddef>
</doxygen>
