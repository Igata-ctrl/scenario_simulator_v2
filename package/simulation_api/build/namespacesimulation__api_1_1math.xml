<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacesimulation__api_1_1math" kind="namespace" language="C++">
    <compoundname>simulation_api::math</compoundname>
    <innerclass refid="classsimulation__api_1_1math_1_1CatmullRomSpline" prot="public">simulation_api::math::CatmullRomSpline</innerclass>
    <innerclass refid="classsimulation__api_1_1math_1_1HermiteCurve" prot="public">simulation_api::math::HermiteCurve</innerclass>
    <innerclass refid="classsimulation__api_1_1math_1_1PolynomialSolver" prot="public">simulation_api::math::PolynomialSolver</innerclass>
    <innerclass refid="classsimulation__api_1_1math_1_1SplineInterpolationError" prot="public">simulation_api::math::SplineInterpolationError</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="bounding__box_8hpp_1a945f7b098fc80231ec7a58fbfdbac254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; double &gt;</type>
        <definition>boost::optional&lt; double &gt; simulation_api::math::getPolygonDistance</definition>
        <argsstring>(const geometry_msgs::msg::Pose &amp;pose0, const openscenario_msgs::msg::BoundingBox &amp;bbox0, const geometry_msgs::msg::Pose &amp;pose1, const openscenario_msgs::msg::BoundingBox &amp;bbox1)</argsstring>
        <name>getPolygonDistance</name>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>pose0</declname>
        </param>
        <param>
          <type>const openscenario_msgs::msg::BoundingBox &amp;</type>
          <declname>bbox0</declname>
        </param>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>pose1</declname>
        </param>
        <param>
          <type>const openscenario_msgs::msg::BoundingBox &amp;</type>
          <declname>bbox1</declname>
        </param>
        <briefdescription>
<para>Get the Polygon Distance object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pose0</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the first bounding box </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bbox0</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the first bounding box </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pose1</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the second bounding box </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bbox1</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the second bounding box </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>boost::none</parametername>
</parameternamelist>
<parameterdescription>
<para>bounding box intersects </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>&lt;= distance between two bounding boxes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/bounding_box.hpp" line="35" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/bounding_box.cpp" bodystart="39" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="bounding__box_8hpp_1aa1704f160faeff58639e53432c8cb41a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::geometry::model::polygon&lt; boost::geometry::model::d2::point_xy&lt; double &gt; &gt;</type>
        <definition>const boost::geometry::model::polygon&lt; boost::geometry::model::d2::point_xy&lt; double &gt; &gt; simulation_api::math::get2DPolygon</definition>
        <argsstring>(const geometry_msgs::msg::Pose &amp;pose, const openscenario_msgs::msg::BoundingBox &amp;bbox)</argsstring>
        <name>get2DPolygon</name>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>const openscenario_msgs::msg::BoundingBox &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/bounding_box.hpp" line="41" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/bounding_box.cpp" bodystart="61" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="bounding__box_8hpp_1a5ee9c85072860d334b09c85ec70c8d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>std::vector&lt; geometry_msgs::msg::Point &gt; simulation_api::math::transformPoints</definition>
        <argsstring>(geometry_msgs::msg::Pose pose, std::vector&lt; geometry_msgs::msg::Point &gt; points)</argsstring>
        <name>transformPoints</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/bounding_box.hpp" line="44" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/bounding_box.cpp" bodystart="104" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="bounding__box_8hpp_1abc25aa74302d88c21793cd39464df0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>std::vector&lt; geometry_msgs::msg::Point &gt; simulation_api::math::getPointsFromBbox</definition>
        <argsstring>(openscenario_msgs::msg::BoundingBox bbox)</argsstring>
        <name>getPointsFromBbox</name>
        <param>
          <type>openscenario_msgs::msg::BoundingBox</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/bounding_box.hpp" line="47" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/bounding_box.cpp" bodystart="77" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="collision_8hpp_1a311282b6752dcca59fb04959b01ca92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool simulation_api::math::checkCollision2D</definition>
        <argsstring>(geometry_msgs::msg::Pose pose0, openscenario_msgs::msg::BoundingBox bbox0, geometry_msgs::msg::Pose pose1, openscenario_msgs::msg::BoundingBox bbox1)</argsstring>
        <name>checkCollision2D</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>pose0</declname>
        </param>
        <param>
          <type>openscenario_msgs::msg::BoundingBox</type>
          <declname>bbox0</declname>
        </param>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>pose1</declname>
        </param>
        <param>
          <type>openscenario_msgs::msg::BoundingBox</type>
          <declname>bbox1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/collision.hpp" line="28" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/collision.cpp" bodystart="33" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="distance_8hpp_1a1d7b3be3453767ce859dbef804ff552c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simulation_api::math::getDistance</definition>
        <argsstring>(const geometry_msgs::msg::Point &amp;p0, const geometry_msgs::msg::Point &amp;p1)</argsstring>
        <name>getDistance</name>
        <param>
          <type>const geometry_msgs::msg::Point &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const geometry_msgs::msg::Point &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/distance.hpp" line="35" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/distance.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="distance_8hpp_1a8bfdd80d0a496b86c0d732aa4841c3c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simulation_api::math::getDistance</definition>
        <argsstring>(const geometry_msgs::msg::Pose &amp;p0, const geometry_msgs::msg::Point &amp;p1)</argsstring>
        <name>getDistance</name>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const geometry_msgs::msg::Point &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/distance.hpp" line="36" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/distance.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="distance_8hpp_1a5d8cd1db09f3346174698cd841d07c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simulation_api::math::getDistance</definition>
        <argsstring>(const geometry_msgs::msg::Point &amp;p0, const geometry_msgs::msg::Pose &amp;p1)</argsstring>
        <name>getDistance</name>
        <param>
          <type>const geometry_msgs::msg::Point &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/distance.hpp" line="37" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/distance.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="distance_8hpp_1aa33359c3c86745840b67228753559d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double simulation_api::math::getDistance</definition>
        <argsstring>(const geometry_msgs::msg::Pose &amp;p0, const geometry_msgs::msg::Pose &amp;p1)</argsstring>
        <name>getDistance</name>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>p0</declname>
        </param>
        <param>
          <type>const geometry_msgs::msg::Pose &amp;</type>
          <declname>p1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/distance.hpp" line="38" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/distance.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="uuid_8hpp_1a3af732f6928cd25a69fb81421d30832d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string simulation_api::math::generateUUID</definition>
        <argsstring>(const std::string &amp;seed)</argsstring>
        <name>generateUUID</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/uuid.hpp" line="35" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/src/math/uuid.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_api/include/simulation_api/math/bounding_box.hpp" line="34" column="1"/>
  </compounddef>
</doxygen>
