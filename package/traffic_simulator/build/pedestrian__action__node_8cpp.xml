<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pedestrian__action__node_8cpp" kind="file" language="C++">
    <compoundname>pedestrian_action_node.cpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="pedestrian__action__node_8hpp" local="no">traffic_simulator/behavior/pedestrian/pedestrian_action_node.hpp</includes>
    <incdepgraph>
      <node id="3956">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
        <childnode refid="3957" relation="include">
        </childnode>
        <childnode refid="3958" relation="include">
        </childnode>
        <childnode refid="3959" relation="include">
        </childnode>
      </node>
      <node id="3981">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="3975">
        <label>queue</label>
      </node>
      <node id="3967">
        <label>limits</label>
      </node>
      <node id="3942">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="3971">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="3941">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="3922">
        <label>openscenario_msgs/msg/waypoints_array.hpp</label>
      </node>
      <node id="3935">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="3974">
        <label>traffic_simulator/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3972">
        <label>traffic_simulator/entity/exception.hpp</label>
        <link refid="exception_8hpp_source"/>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
      </node>
      <node id="3930">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="3964">
        <label>autoware_perception_msgs/msg/traffic_light_state_array.hpp</label>
      </node>
      <node id="3919">
        <label>traffic_simulator/behavior/action_node.hpp</label>
        <link refid="action__node_8hpp_source"/>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3920" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3921" relation="include">
        </childnode>
        <childnode refid="3922" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3923" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3926">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="3982">
        <label>pugixml.hpp</label>
      </node>
      <node id="3957">
        <label>autoware_perception_msgs/msg/lamp_state.hpp</label>
      </node>
      <node id="3979">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="3951">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="3985">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="3986">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="3969">
        <label>cassert</label>
      </node>
      <node id="3959">
        <label>stdexcept</label>
      </node>
      <node id="3953">
        <label>openscenario_msgs/msg/hermite_curve.hpp</label>
      </node>
      <node id="3915">
        <label>string</label>
      </node>
      <node id="3921">
        <label>openscenario_msgs/msg/obstacle.hpp</label>
      </node>
      <node id="3945">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="3946">
        <label>map</label>
      </node>
      <node id="3948">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="3949" relation="include">
        </childnode>
        <childnode refid="3924" relation="include">
        </childnode>
        <childnode refid="3950" relation="include">
        </childnode>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3952" relation="include">
        </childnode>
        <childnode refid="3953" relation="include">
        </childnode>
        <childnode refid="3954" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3968">
        <label>traffic_simulator/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
        <childnode refid="3946" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
      </node>
      <node id="3925">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="3984">
        <label>traffic_simulator/entity/vehicle_parameter.hpp</label>
        <link refid="vehicle__parameter_8hpp_source"/>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3952" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3986" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
      </node>
      <node id="3947">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="3934">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="3939">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="3927">
        <label>traffic_simulator/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="3928" relation="include">
        </childnode>
        <childnode refid="3929" relation="include">
        </childnode>
        <childnode refid="3930" relation="include">
        </childnode>
        <childnode refid="3931" relation="include">
        </childnode>
        <childnode refid="3932" relation="include">
        </childnode>
        <childnode refid="3933" relation="include">
        </childnode>
        <childnode refid="3934" relation="include">
        </childnode>
        <childnode refid="3935" relation="include">
        </childnode>
        <childnode refid="3936" relation="include">
        </childnode>
        <childnode refid="3937" relation="include">
        </childnode>
        <childnode refid="3938" relation="include">
        </childnode>
        <childnode refid="3939" relation="include">
        </childnode>
        <childnode refid="3940" relation="include">
        </childnode>
        <childnode refid="3924" relation="include">
        </childnode>
        <childnode refid="3941" relation="include">
        </childnode>
        <childnode refid="3942" relation="include">
        </childnode>
        <childnode refid="3943" relation="include">
        </childnode>
        <childnode refid="3944" relation="include">
        </childnode>
        <childnode refid="3945" relation="include">
        </childnode>
        <childnode refid="3946" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3948" relation="include">
        </childnode>
        <childnode refid="3956" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>exception</label>
      </node>
      <node id="3978">
        <label>traffic_simulator/entity/pedestrian_parameter.hpp</label>
        <link refid="pedestrian__parameter_8hpp_source"/>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3952" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3984" relation="include">
        </childnode>
      </node>
      <node id="3928">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="3952">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="3966">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="3933">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="3944">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="3949">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="3917">
        <label>behaviortree_cpp_v3/action_node.h</label>
      </node>
      <node id="3943">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="3950">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="3970">
        <label>cstdio</label>
      </node>
      <node id="3920">
        <label>boost/algorithm/clamp.hpp</label>
      </node>
      <node id="3977">
        <label>openscenario_msgs/msg/catmull_rom_spline.hpp</label>
      </node>
      <node id="3955">
        <label>vector</label>
      </node>
      <node id="3961">
        <label>utility</label>
      </node>
      <node id="3983">
        <label>sstream</label>
      </node>
      <node id="3913">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/pedestrian/pedestrian_action_node.cpp</label>
        <link refid="pedestrian__action__node_8cpp"/>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3916" relation="include">
        </childnode>
      </node>
      <node id="3954">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3937">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="3976">
        <label>traffic_simulator/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3950" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3948" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3932">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="3980">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="3958">
        <label>iostream</label>
      </node>
      <node id="3916">
        <label>traffic_simulator/behavior/pedestrian/pedestrian_action_node.hpp</label>
        <link refid="pedestrian__action__node_8hpp_source"/>
        <childnode refid="3917" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3918" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3919" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="3929">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="3965">
        <label>traffic_simulator/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3958" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3959" relation="include">
        </childnode>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3956" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3963">
        <label>traffic_simulator/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp_source"/>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3959" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
      </node>
      <node id="3960">
        <label>unordered_map</label>
      </node>
      <node id="3940">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="3962">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="3931">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="3923">
        <label>traffic_simulator/entity/entity_base.hpp</label>
        <link refid="entity__base_8hpp_source"/>
        <childnode refid="3924" relation="include">
        </childnode>
        <childnode refid="3925" relation="include">
        </childnode>
        <childnode refid="3926" relation="include">
        </childnode>
        <childnode refid="3927" relation="include">
        </childnode>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
        <childnode refid="3914" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3915" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3936">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="3924">
        <label>boost/optional.hpp</label>
      </node>
      <node id="3938">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="3918">
        <label>openscenario_msgs/msg/pedestrian_parameters.hpp</label>
      </node>
      <node id="3914">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceentity__behavior">entity_behavior</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/behavior/pedestrian/pedestrian_action_node.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceentity__behavior" kindref="compound">entity_behavior</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal">PedestrianActionNode::PedestrianActionNode(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BT::NodeConfiguration<sp/>&amp;<sp/>config)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">:<sp/>ActionNode(name,<sp/>config)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianActionNode::getBlackBoardValues()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>ActionNode::getBlackBoardValues();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getInput&lt;openscenario_msgs::msg::PedestrianParameters&gt;(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pedestrian_parameters&quot;</highlight><highlight class="normal">,<sp/>pedestrian_parameters))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BehaviorTreeRuntimeError(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>get<sp/>input<sp/>pedestrian_parameters<sp/>in<sp/>PedestrianActionNode&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">openscenario_msgs::msg::EntityStatus<sp/>PedestrianActionNode::calculateEntityStatusUpdated(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_speed)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Accel<sp/>accel_new;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>accel_new<sp/>=<sp/>entity_status.action_status.accel;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_accel<sp/>=<sp/>(target_speed<sp/>-<sp/>entity_status.action_status.twist.linear.x)<sp/>/<sp/>step_time;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entity_status.action_status.twist.linear.x<sp/>&gt;<sp/>target_speed)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>target_accel<sp/>=<sp/>boost::algorithm::clamp(target_accel,<sp/>-5,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>target_accel<sp/>=<sp/>boost::algorithm::clamp(target_accel,<sp/>0,<sp/>3);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>accel_new.linear.x<sp/>=<sp/>target_accel;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Twist<sp/>twist_new;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>twist_new.linear.x<sp/>=<sp/>boost::algorithm::clamp(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status.action_status.twist.linear.x<sp/>+<sp/>accel_new.linear.x<sp/>*<sp/>step_time,<sp/>-10,<sp/>10);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>twist_new.linear.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>twist_new.linear.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>twist_new.angular.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>twist_new.angular.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>twist_new.angular.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::int64_t<sp/>new_lanelet_id<sp/>=<sp/>entity_status.lanelet_pose.lanelet_id;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_s<sp/>=</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status.lanelet_pose.s<sp/>+</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>(twist_new.linear.x<sp/>+<sp/>entity_status.action_status.twist.linear.x)<sp/>/<sp/>2.0<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_s<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>previous_lanlet_ids<sp/>=</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;getPreviousLaneletIds(entity_status.lanelet_pose.lanelet_id);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>new_lanelet_id<sp/>=<sp/>previous_lanlet_ids[0];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>new_s<sp/>=<sp/>new_s<sp/>+<sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;getLaneletLength(new_lanelet_id)<sp/>-<sp/>0.01;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::EntityStatus<sp/>entity_status_updated;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.time<sp/>=<sp/>current_time<sp/>+<sp/>step_time;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.lanelet_id<sp/>=<sp/>new_lanelet_id;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.s<sp/>=<sp/>new_s;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.offset<sp/>=<sp/>entity_status.lanelet_pose.offset;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.rpy<sp/>=<sp/>entity_status.lanelet_pose.rpy;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.action_status.twist<sp/>=<sp/>twist_new;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.action_status.accel<sp/>=<sp/>accel_new;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.pose<sp/>=<sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;toMapPose(entity_status_updated.lanelet_pose).pose;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity_status_updated;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calculation_success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>route_lanelets.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(route_lanelets[i]<sp/>==<sp/>entity_status.lanelet_pose.lanelet_id)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length<sp/>=<sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;getLaneletLength(entity_status.lanelet_pose.lanelet_id);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculation_success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>new_s)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>(route_lanelets.size()<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_s<sp/>=<sp/>new_s<sp/>-<sp/>length;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_lanelet_id<sp/>=<sp/>route_lanelets[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_s<sp/>=<sp/>new_s<sp/>-<sp/>length;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>next_ids<sp/>=<sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;getNextLaneletIds(route_lanelets[i]);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_ids.empty())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stopAtEndOfRoad();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_lanelet_id<sp/>=<sp/>next_ids[0];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!calculation_success)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BehaviorTreeRuntimeError(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>calculate<sp/>next<sp/>status<sp/>calculateEntityStatusUpdated<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::EntityStatus<sp/>entity_status_updated;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.time<sp/>=<sp/>current_time<sp/>+<sp/>step_time;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.lanelet_id<sp/>=<sp/>new_lanelet_id;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.s<sp/>=<sp/>new_s;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.offset<sp/>=<sp/>entity_status.lanelet_pose.offset;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.lanelet_pose.rpy<sp/>=<sp/>entity_status.lanelet_pose.rpy;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.pose<sp/>=<sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;toMapPose(entity_status_updated.lanelet_pose).pose;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.action_status.twist<sp/>=<sp/>twist_new;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>entity_status_updated.action_status.accel<sp/>=<sp/>accel_new;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity_status_updated;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>BehaviorTreeRuntimeError(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>calculate<sp/>next<sp/>status<sp/>calculateEntityStatusUpdated<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">openscenario_msgs::msg::EntityStatus<sp/>PedestrianActionNode::calculateEntityStatusUpdatedInWorldFrame(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_speed)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_accel<sp/>=<sp/>(target_speed<sp/>-<sp/>entity_status.action_status.twist.linear.x)<sp/>/<sp/>step_time;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entity_status.action_status.twist.linear.x<sp/>&gt;<sp/>target_speed)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>target_accel<sp/>=<sp/>boost::algorithm::clamp(target_accel,<sp/>-5,<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>target_accel<sp/>=<sp/>boost::algorithm::clamp(target_accel,<sp/>0,<sp/>3);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Accel<sp/>accel_new;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>accel_new<sp/>=<sp/>entity_status.action_status.accel;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>accel_new.linear.x<sp/>=<sp/>target_accel;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Twist<sp/>twist_new;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>twist_new.linear.x<sp/>=<sp/>entity_status.action_status.twist.linear.x<sp/>+</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.action_status.accel.linear.x<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>twist_new.linear.y<sp/>=<sp/>entity_status.action_status.twist.linear.y<sp/>+</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.action_status.accel.linear.y<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>twist_new.linear.z<sp/>=<sp/>entity_status.action_status.twist.linear.z<sp/>+</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.action_status.accel.linear.z<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>twist_new.angular.x<sp/>=<sp/>entity_status.action_status.twist.angular.x<sp/>+</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.action_status.accel.angular.x<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>twist_new.angular.y<sp/>=<sp/>entity_status.action_status.twist.angular.y<sp/>+</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.action_status.accel.angular.y<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>twist_new.angular.z<sp/>=<sp/>entity_status.action_status.twist.angular.z<sp/>+</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.action_status.accel.angular.z<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose_new;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Vector3<sp/>angular_trans_vec;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>angular_trans_vec.z<sp/>=<sp/>twist_new.angular.z<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Quaternion<sp/>angular_trans_quat<sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>quaternion_operation::convertEulerAngleToQuaternion(angular_trans_vec);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>pose_new.orientation<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>quaternion_operation::rotation(entity_status.pose.orientation,<sp/>angular_trans_quat);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>Eigen::Vector3d<sp/>trans_vec;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>trans_vec(0)<sp/>=<sp/>twist_new.linear.x<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>trans_vec(1)<sp/>=<sp/>twist_new.linear.y<sp/>*<sp/>step_time;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>trans_vec(2)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>Eigen::Matrix3d<sp/>rotation_mat<sp/>=<sp/>quaternion_operation::getRotationMatrix(pose_new.orientation);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>trans_vec<sp/>=<sp/>rotation_mat<sp/>*<sp/>trans_vec;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>pose_new.position.x<sp/>=<sp/>trans_vec(0)<sp/>+<sp/>entity_status.pose.position.x;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>pose_new.position.y<sp/>=<sp/>trans_vec(1)<sp/>+<sp/>entity_status.pose.position.y;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>pose_new.position.z<sp/>=<sp/>trans_vec(2)<sp/>+<sp/>entity_status.pose.position.z;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::EntityStatus<sp/>entity_status_updated;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>entity_status_updated.time<sp/>=<sp/>current_time<sp/>+<sp/>step_time;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>entity_status_updated.pose<sp/>=<sp/>pose_new;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>entity_status_updated.action_status.twist<sp/>=<sp/>twist_new;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>entity_status_updated.action_status.accel<sp/>=<sp/>accel_new;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>entity_status_updated.lanelet_pose_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity_status_updated;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>entity_behavior</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/pedestrian/pedestrian_action_node.cpp"/>
  </compounddef>
</doxygen>
