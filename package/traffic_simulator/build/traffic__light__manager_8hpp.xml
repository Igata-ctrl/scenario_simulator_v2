<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__light__manager_8hpp" kind="file" language="C++">
    <compoundname>traffic_light_manager.hpp</compoundname>
    <includes local="no">autoware_perception_msgs/msg/traffic_light_state_array.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">rclcpp/rclcpp.hpp</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes refid="hdmap__utils_8hpp" local="no">traffic_simulator/hdmap_utils/hdmap_utils.hpp</includes>
    <includes refid="traffic__light_8hpp" local="no">traffic_simulator/traffic_lights/traffic_light.hpp</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">visualization_msgs/msg/marker_array.hpp</includes>
    <includedby refid="action__node_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/action_node.hpp</includedby>
    <includedby refid="entity__base_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/entity_base.hpp</includedby>
    <includedby refid="entity__manager_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/entity_manager.hpp</includedby>
    <includedby refid="traffic__light__manager_8cpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/traffic_lights/traffic_light_manager.cpp</includedby>
    <incdepgraph>
      <node id="3188">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
        <childnode refid="3189" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
      </node>
      <node id="3196">
        <label>limits</label>
      </node>
      <node id="3174">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="3200">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="3173">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="3166">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="3203">
        <label>traffic_simulator/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
      </node>
      <node id="3201">
        <label>traffic_simulator/entity/exception.hpp</label>
        <link refid="exception_8hpp_source"/>
        <childnode refid="3202" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
      </node>
      <node id="3161">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="3153">
        <label>autoware_perception_msgs/msg/traffic_light_state_array.hpp</label>
      </node>
      <node id="3179">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="3189">
        <label>autoware_perception_msgs/msg/lamp_state.hpp</label>
      </node>
      <node id="3183">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="3198">
        <label>cassert</label>
      </node>
      <node id="3156">
        <label>stdexcept</label>
      </node>
      <node id="3185">
        <label>openscenario_msgs/msg/hermite_curve.hpp</label>
      </node>
      <node id="3157">
        <label>string</label>
      </node>
      <node id="3177">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="3178">
        <label>map</label>
      </node>
      <node id="3180">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="3181" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
        <childnode refid="3182" relation="include">
        </childnode>
        <childnode refid="3183" relation="include">
        </childnode>
        <childnode refid="3184" relation="include">
        </childnode>
        <childnode refid="3185" relation="include">
        </childnode>
        <childnode refid="3186" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
      </node>
      <node id="3197">
        <label>traffic_simulator/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="3198" relation="include">
        </childnode>
        <childnode refid="3199" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3200" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
      </node>
      <node id="3155">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="3165">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="3170">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="3158">
        <label>traffic_simulator/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="3159" relation="include">
        </childnode>
        <childnode refid="3160" relation="include">
        </childnode>
        <childnode refid="3161" relation="include">
        </childnode>
        <childnode refid="3162" relation="include">
        </childnode>
        <childnode refid="3163" relation="include">
        </childnode>
        <childnode refid="3164" relation="include">
        </childnode>
        <childnode refid="3165" relation="include">
        </childnode>
        <childnode refid="3166" relation="include">
        </childnode>
        <childnode refid="3167" relation="include">
        </childnode>
        <childnode refid="3168" relation="include">
        </childnode>
        <childnode refid="3169" relation="include">
        </childnode>
        <childnode refid="3170" relation="include">
        </childnode>
        <childnode refid="3171" relation="include">
        </childnode>
        <childnode refid="3172" relation="include">
        </childnode>
        <childnode refid="3173" relation="include">
        </childnode>
        <childnode refid="3174" relation="include">
        </childnode>
        <childnode refid="3175" relation="include">
        </childnode>
        <childnode refid="3176" relation="include">
        </childnode>
        <childnode refid="3177" relation="include">
        </childnode>
        <childnode refid="3178" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3179" relation="include">
        </childnode>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3180" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
      </node>
      <node id="3202">
        <label>exception</label>
      </node>
      <node id="3159">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="3184">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="3195">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="3164">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="3176">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="3181">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="3175">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="3182">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="3199">
        <label>cstdio</label>
      </node>
      <node id="3187">
        <label>vector</label>
      </node>
      <node id="3192">
        <label>utility</label>
      </node>
      <node id="3186">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="3187" relation="include">
        </childnode>
      </node>
      <node id="3168">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="3163">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="3190">
        <label>iostream</label>
      </node>
      <node id="3160">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="3194">
        <label>traffic_simulator/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="3195" relation="include">
        </childnode>
        <childnode refid="3190" relation="include">
        </childnode>
        <childnode refid="3196" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3197" relation="include">
        </childnode>
        <childnode refid="3201" relation="include">
        </childnode>
        <childnode refid="3203" relation="include">
        </childnode>
        <childnode refid="3188" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
      </node>
      <node id="3191">
        <label>unordered_map</label>
      </node>
      <node id="3152">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp"/>
        <childnode refid="3153" relation="include">
        </childnode>
        <childnode refid="3154" relation="include">
        </childnode>
        <childnode refid="3155" relation="include">
        </childnode>
        <childnode refid="3156" relation="include">
        </childnode>
        <childnode refid="3157" relation="include">
        </childnode>
        <childnode refid="3158" relation="include">
        </childnode>
        <childnode refid="3194" relation="include">
        </childnode>
        <childnode refid="3191" relation="include">
        </childnode>
        <childnode refid="3192" relation="include">
        </childnode>
        <childnode refid="3187" relation="include">
        </childnode>
        <childnode refid="3193" relation="include">
        </childnode>
      </node>
      <node id="3171">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="3193">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="3162">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="3167">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="3172">
        <label>boost/optional.hpp</label>
      </node>
      <node id="3169">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="3154">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3211">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/api/api.hpp</label>
        <link refid="api_8hpp_source"/>
      </node>
      <node id="3217">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/traveled_distance_metric.hpp</label>
        <link refid="traveled__distance__metric_8hpp_source"/>
        <childnode refid="3213" relation="include">
        </childnode>
      </node>
      <node id="3218">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/walk_straight_action.hpp</label>
        <link refid="walk__straight__action_8hpp"/>
        <childnode refid="3208" relation="include">
        </childnode>
        <childnode refid="3219" relation="include">
        </childnode>
      </node>
      <node id="3221">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/follow_front_entity_action.hpp</label>
        <link refid="follow__front__entity__action_8hpp_source"/>
      </node>
      <node id="3215">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/momentary_stop_metric.hpp</label>
        <link refid="momentary__stop__metric_8hpp_source"/>
        <childnode refid="3213" relation="include">
        </childnode>
      </node>
      <node id="3223">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_crossing_entity_action.hpp</label>
        <link refid="stop__at__crossing__entity__action_8hpp_source"/>
      </node>
      <node id="3208">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/behavior_tree.hpp</label>
        <link refid="pedestrian_2behavior__tree_8hpp_source"/>
        <childnode refid="3209" relation="include">
        </childnode>
      </node>
      <node id="3225">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.hpp</label>
        <link refid="stop__at__traffic__light__action_8hpp_source"/>
      </node>
      <node id="3212">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/metric_base.hpp</label>
        <link refid="metric__base_8hpp_source"/>
        <childnode refid="3213" relation="include">
        </childnode>
        <childnode refid="3214" relation="include">
        </childnode>
        <childnode refid="3215" relation="include">
        </childnode>
        <childnode refid="3216" relation="include">
        </childnode>
        <childnode refid="3217" relation="include">
        </childnode>
      </node>
      <node id="3209">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/pedestrian_entity.hpp</label>
        <link refid="pedestrian__entity_8hpp_source"/>
        <childnode refid="3210" relation="include">
        </childnode>
      </node>
      <node id="3205">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/action_node.hpp</label>
        <link refid="action__node_8hpp_source"/>
        <childnode refid="3206" relation="include">
        </childnode>
        <childnode refid="3220" relation="include">
        </childnode>
      </node>
      <node id="3219">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/pedestrian/walk_straight_action.cpp</label>
        <link refid="walk__straight__action_8cpp"/>
      </node>
      <node id="3224">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_stop_line_action.hpp</label>
        <link refid="stop__at__stop__line__action_8hpp_source"/>
      </node>
      <node id="3227">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/lane_change_action.hpp</label>
        <link refid="lane__change__action_8hpp_source"/>
        <childnode refid="3228" relation="include">
        </childnode>
      </node>
      <node id="3210">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/entity_manager.hpp</label>
        <link refid="entity__manager_8hpp_source"/>
        <childnode refid="3211" relation="include">
        </childnode>
        <childnode refid="3212" relation="include">
        </childnode>
        <childnode refid="3214" relation="include">
        </childnode>
      </node>
      <node id="3216">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/reaction_time_metric.hpp</label>
        <link refid="reaction__time__metric_8hpp_source"/>
        <childnode refid="3213" relation="include">
        </childnode>
      </node>
      <node id="3214">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/metrics_manager.hpp</label>
        <link refid="metrics__manager_8hpp_source"/>
        <childnode refid="3211" relation="include">
        </childnode>
      </node>
      <node id="3228">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/vehicle_entity.hpp</label>
        <link refid="vehicle__entity_8hpp_source"/>
        <childnode refid="3229" relation="include">
        </childnode>
        <childnode refid="3210" relation="include">
        </childnode>
      </node>
      <node id="3207">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/follow_lane_action.hpp</label>
        <link refid="pedestrian_2follow__lane__action_8hpp_source"/>
        <childnode refid="3208" relation="include">
        </childnode>
      </node>
      <node id="3213">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/metrics.hpp</label>
        <link refid="metrics_8hpp_source"/>
      </node>
      <node id="3229">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/ego_entity.hpp</label>
        <link refid="ego__entity_8hpp_source"/>
        <childnode refid="3210" relation="include">
        </childnode>
      </node>
      <node id="3206">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/pedestrian_action_node.hpp</label>
        <link refid="pedestrian__action__node_8hpp_source"/>
        <childnode refid="3207" relation="include">
        </childnode>
        <childnode refid="3218" relation="include">
        </childnode>
      </node>
      <node id="3220">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/vehicle_action_node.hpp</label>
        <link refid="vehicle__action__node_8hpp_source"/>
        <childnode refid="3221" relation="include">
        </childnode>
        <childnode refid="3222" relation="include">
        </childnode>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
        <childnode refid="3226" relation="include">
        </childnode>
        <childnode refid="3227" relation="include">
        </childnode>
      </node>
      <node id="3204">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp"/>
        <childnode refid="3205" relation="include">
        </childnode>
        <childnode refid="3230" relation="include">
        </childnode>
        <childnode refid="3210" relation="include">
        </childnode>
      </node>
      <node id="3230">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/entity_base.hpp</label>
        <link refid="entity__base_8hpp_source"/>
        <childnode refid="3205" relation="include">
        </childnode>
        <childnode refid="3221" relation="include">
        </childnode>
        <childnode refid="3223" relation="include">
        </childnode>
        <childnode refid="3224" relation="include">
        </childnode>
        <childnode refid="3225" relation="include">
        </childnode>
        <childnode refid="3226" relation="include">
        </childnode>
        <childnode refid="3210" relation="include">
        </childnode>
        <childnode refid="3209" relation="include">
        </childnode>
        <childnode refid="3228" relation="include">
        </childnode>
      </node>
      <node id="3222">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/follow_lane_action.hpp</label>
        <link refid="vehicle_2follow__lane__sequence_2follow__lane__action_8hpp_source"/>
      </node>
      <node id="3226">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/yield_action.hpp</label>
        <link refid="yield__action_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtraffic__simulator_1_1TrafficLightManager" prot="public">traffic_simulator::TrafficLightManager</innerclass>
    <innernamespace refid="namespacetraffic__simulator">traffic_simulator</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="traffic__light__manager_8hpp_1ac9f3373e33307d703d3a9702d61caec3" prot="public" static="no">
        <name>FORWARD_TO_GIVEN_TRAFFIC_LIGHT</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>template &lt;typename... Ts&gt;                                                                 \
  decltype(auto) IDENTIFIER(const std::int64_t lanelet_id, Ts &amp;&amp;... xs)                     \
  {                                                                                         \
    try {                                                                                   \
      return traffic_lights_.at(lanelet_id)-&gt;IDENTIFIER(std::forward&lt;decltype(xs)&gt;(xs)...); \
    } catch (const std::out_of_range &amp;) {                                                   \
      std::stringstream what;                                                               \
      what &lt;&lt; &quot;Given lanelet ID &apos;&quot; &lt;&lt; lanelet_id &lt;&lt; &quot;&apos; is not a valid traffic-light ID.&quot;;   \
      throw SimulationRuntimeError(what.str());                                             \
    }                                                                                       \
  }                                                                                         \
  static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/traffic_lights/traffic_light_manager.hpp" line="46" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/traffic_lights/traffic_light_manager.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRAFFIC_SIMULATOR__TRAFFIC_LIGHTS__TRAFFIC_LIGHT_MANAGER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRAFFIC_SIMULATOR__TRAFFIC_LIGHTS__TRAFFIC_LIGHT_MANAGER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;autoware_perception_msgs/msg/traffic_light_state_array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rclcpp/rclcpp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::out_of_range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/hdmap_utils/hdmap_utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/traffic_lights/traffic_light.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;visualization_msgs/msg/marker_array.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetraffic__simulator" kindref="compound">traffic_simulator</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="classtraffic__simulator_1_1TrafficLightManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtraffic__simulator_1_1TrafficLightManager" kindref="compound">TrafficLightManager</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::Publisher&lt;autoware_perception_msgs::msg::TrafficLightStateArray&gt;::SharedPtr</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>traffic_light_state_array_publisher_;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtraffic__simulator_1_1TrafficLightManager" kindref="compound">TrafficLightManager</ref>(</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;hdmap_utils::HdMapUtils&gt;<sp/>&amp;<sp/>hdmap_utils_ptr,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::Publisher&lt;visualization_msgs::msg::MarkerArray&gt;::SharedPtr<sp/>&amp;<sp/>publisher,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::Publisher&lt;autoware_perception_msgs::msg::TrafficLightStateArray&gt;::SharedPtr<sp/>&amp;,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;rclcpp::Clock&gt;<sp/>&amp;<sp/>clock_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>map_frame<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(IDENTIFIER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename...<sp/>Ts&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>decltype(auto)<sp/>IDENTIFIER(const<sp/>std::int64_t<sp/>lanelet_id,<sp/>Ts<sp/>&amp;&amp;...<sp/>xs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>try<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>traffic_lights_.at(lanelet_id)-&gt;IDENTIFIER(std::forward&lt;decltype(xs)&gt;(xs)...);<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(const<sp/>std::out_of_range<sp/>&amp;)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>what;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>what<sp/>&lt;&lt;<sp/>&quot;Given<sp/>lanelet<sp/>ID<sp/>&apos;&quot;<sp/>&lt;&lt;<sp/>lanelet_id<sp/>&lt;&lt;<sp/>&quot;&apos;<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>traffic-light<sp/>ID.&quot;;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>SimulationRuntimeError(what.str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(getArrow);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(getColor);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(setArrow);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(setArrowPhase);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(setColor);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT(setColorPhase);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FORWARD_TO_GIVEN_TRAFFIC_LIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>std::vector&lt;std::int64_t&gt;<sp/>getIds()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deleteAllMarkers()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawMarkers()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>publishTrafficLightStateArray()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="77"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>autoware_perception_msgs::msg::TrafficLightStateArray<sp/>traffic_light_state_array;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>traffic_light_state_array.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;camera_link&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>DIRTY<sp/>HACK!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>traffic_light_state_array.header.stamp<sp/>=<sp/>(*clock_ptr_).now();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>each<sp/>:<sp/>traffic_lights_)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traffic_light_state_array.states.push_back(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;autoware_perception_msgs::msg::TrafficLightState&gt;(*std::get&lt;1&gt;(each)));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*traffic_light_state_array_publisher_).publish(traffic_light_state_array);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::int64_t,<sp/>std::shared_ptr&lt;TrafficLight&gt;&gt;<sp/>traffic_lights_;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rclcpp::Publisher&lt;visualization_msgs::msg::MarkerArray&gt;::SharedPtr<sp/>marker_pub_;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;rclcpp::Clock&gt;<sp/>clock_ptr_;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>map_frame_;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>traffic_simulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TRAFFIC_SIMULATOR__TRAFFIC_LIGHTS__TRAFFIC_LIGHT_MANAGER_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/traffic_lights/traffic_light_manager.hpp"/>
  </compounddef>
</doxygen>
